{"ast":null,"code":"import axios from 'axios';\nimport Swal from 'sweetalert2';\nexport default {\n  name: 'ActProd',\n  data() {\n    return {\n      cantVen: '',\n      Costunit: 0,\n      pric: 0,\n      canti: 0,\n      Facturas: false,\n      descriptio: '',\n      datoscant: [],\n      datoscat: [],\n      idNeg: 1,\n      selectfile: null,\n      props: this.$props\n    };\n  },\n  mounted() {\n    this.Cantidades();\n    this.Categorias();\n  },\n  props: {\n    idparactuproduc: Object\n  },\n  methods: {\n    async Cantidades() {\n      try {\n        const response = await axios.get('http://localhost:3000/cantidadproducDos');\n        this.datoscant = response.data.results;\n      } catch (error) {\n        console.error('Error al obtener las cantidades:', error);\n        alert('Error al obtener las cantidades');\n      }\n    },\n    async Categorias() {\n      try {\n        const response = await axios.get('http://localhost:3000/categoriaproducto');\n        this.datoscat = response.data.results;\n      } catch (error) {\n        console.error('Error al obtener las categorias:', error);\n        alert('Error al obtener las categorias');\n      }\n    },\n    onFileChange(event) {\n      this.selectfile = event.target.files[0];\n    },\n    async actualiProduct() {\n      const formData = new FormData();\n      formData.append('Datos', this.selectfile);\n      formData.append('productName', this.props.idparactuproduc.nombre);\n      formData.append('Costunit', this.props.idparactuproduc.presioprod);\n      formData.append('price', this.props.idparactuproduc.Presiovent);\n      formData.append('cantid', this.props.idparactuproduc.cantid);\n      formData.append('Factura', this.props.idparactuproduc.Facturas);\n      formData.append('description', this.props.idparactuproduc.Desc);\n      formData.append('idneg', this.idNeg);\n      formData.append('idimg', this.props.idparactuproduc.id);\n      formData.append('codigobarras', this); // Suponiendo que el id de la imagen es el id del producto\n\n      try {\n        const response = await axios.put(`http://localhost:3000/actualizarproducto/${this.props.idparactuproduc.id}`, formData, {\n          headers: {\n            'Content-Type': 'multipart/form-data'\n          }\n        });\n        console.log('Respuesta del servidor:', response.data);\n        //alert('Producto actualizado con éxito');\n        this.$emit(\"mostrarprod\");\n        Swal.fire({\n          position: \"top\",\n          icon: \"success\",\n          title: \"Producto actualizado con exito\",\n          showConfirmButton: false,\n          timer: 1500\n        });\n      } catch (error) {\n        console.error('Error al actualizar el producto:', error);\n        alert('Error al actualizar el producto: ' + error.message);\n      }\n    },\n    resetForm() {\n      this.selectfile = null;\n      this.props.idparactuproduc.nombre = '';\n      this.props.idparactuproduc.presioprod = 0;\n      this.props.idparactuproduc.Presiovent = 0;\n      this.props.idparactuproduc.cantid = 0;\n      this.Factura = '';\n      this.props.idparactuproduc.Desc = '';\n    }\n  }\n};","map":{"version":3,"names":["axios","Swal","name","data","cantVen","Costunit","pric","canti","Facturas","descriptio","datoscant","datoscat","idNeg","selectfile","props","$props","mounted","Cantidades","Categorias","idparactuproduc","Object","methods","response","get","results","error","console","alert","onFileChange","event","target","files","actualiProduct","formData","FormData","append","nombre","presioprod","Presiovent","cantid","Desc","id","put","headers","log","$emit","fire","position","icon","title","showConfirmButton","timer","message","resetForm","Factura"],"sources":["C:\\Users\\Kenny\\Downloads\\Proyect\\Proyect_Web\\src\\components\\ActProducto.vue"],"sourcesContent":["<template>\r\n  <div class=\"container mt-7\">\r\n    <div class=\"row justify-content-center\">\r\n      <div class=\"col-lg-12\">\r\n        <div class=\"card\">\r\n          <div class=\"card-body\">\r\n            <div class=\"d-none\">\r\n              {{ props.idparactuproduc.id }}\r\n            </div>\r\n            <div class=\"mb-3\">\r\n              <label for=\"fileUpload\" class=\"form-label\">Selecciona una imagen para subir</label>\r\n              <input type=\"file\" class=\"form-control\" id=\"fileUpload\" accept=\"image/*\" @change=\"onFileChange\">\r\n            </div>\r\n            <div class=\"row\">\r\n              <div class=\"col-lg-6\">\r\n                <div class=\"mb-3\">\r\n                  <label for=\"NameProduct\" class=\"form-label\">Nombre de producto</label>\r\n                  <input v-model=\"props.idparactuproduc.nombre\" id=\"NameProduct\" type=\"text\" class=\"form-control\">\r\n                </div>\r\n                <div class=\"mb-3\">\r\n                  <label for=\"categ\" class=\"form-label\">Cantidad de venta</label>\r\n                  <select v-model=\"cantVen\" id=\"categ\" class=\"form-select\" aria-label=\"Default select example\">\r\n                    <option v-for=\"cant in datoscant\" :key=\"cant.IDCantidad\" :value=\"cant.IDCantidad\">{{\r\n                      cant.NombreCantidad }}</option>\r\n                  </select>\r\n                </div>\r\n                <div class=\"mb-3\">\r\n                  <label for=\"CostUni\" class=\"form-label\">Precio original</label>\r\n                  <input v-model.number=\"props.idparactuproduc.presioprod\" id=\"CostUni\" type=\"number\" min=\"0\"\r\n                    max=\"50000\" step=\"any\" class=\"form-control\">\r\n                </div>\r\n                <div class=\"mb-3\">\r\n                  <label for=\"preci\" class=\"form-label\">Precio por unidad</label>\r\n                  <input v-model.number=\"props.idparactuproduc.Presiovent\" id=\"preci\" type=\"number\" min=\"0\" max=\"50000\"\r\n                    step=\"any\" class=\"form-control\">\r\n                </div>\r\n              </div>\r\n              <div class=\"col-lg-6\">\r\n                <div class=\"mb-3\">\r\n                  <label for=\"cantidad\" class=\"form-label\">Cantidad disponible</label>\r\n                  <input v-model.number=\"props.idparactuproduc.cantid\" type=\"number\" id=\"cantidad\" name=\"cantidad\"\r\n                    min=\"1\" max=\"100000\" step=\"1\" class=\"form-control\">\r\n                </div>\r\n                <div class=\"mb-3\">\r\n                  <label for=\"categ\" class=\"form-label\">Categoría</label>\r\n                  <select v-model=\"category\" id=\"categ\" class=\"form-select\" aria-label=\"Default select example\">\r\n                    <option v-for=\"cat in datoscat\" :key=\"cat.IDCatProd\" :value=\"cat.IDCatProd\">{{ cat.NombreCategoria\r\n                      }}</option>\r\n                  </select>\r\n                </div>\r\n\r\n                <div class=\"form-check\">\r\n                  <input class=\"form-check-input\" v-model=\"props.idparactuproduc.Facturas\" type=\"radio\"\r\n                    name=\"exampleRadios\" id=\"exampleRadios1\" :value=\"true\">\r\n                  <label class=\"form-check-label\" for=\"exampleRadios1\">\r\n                    Factura\r\n                  </label>\r\n                </div>\r\n                <div class=\"form-check\">\r\n                  <input class=\"form-check-input\" v-model=\"props.idparactuproduc.Facturas\" type=\"radio\"\r\n                    name=\"exampleRadios\" id=\"exampleRadios2\" :value=\"false\">\r\n                  <label class=\"form-check-label\" for=\"exampleRadios2\">\r\n                    No Factura\r\n                  </label>\r\n                </div>\r\n\r\n                <div class=\"mb-3\">\r\n                  <label for=\"Textarea1\" class=\"form-label\">Descripción</label>\r\n                  <textarea v-model=\"props.idparactuproduc.Desc\" class=\"form-control\" id=\"Textarea1\"\r\n                    rows=\"3\"></textarea>\r\n                </div>\r\n                <div class=\"mb-3\">\r\n                  <label for=\"codigobarras\" class=\"form-label\">Código de barras</label>\r\n                  <input v-model.number=\"props.idparactuproduc.codigobarr\" type=\"number\" id=\"codigobarras\" name=\"codigobarras\" min=\"1\"\r\n                    max=\"1000000000000000\" placeholder=\"0000000000000\" step=\"1\" required class=\"form-control\">\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"text-center mt-4\">\r\n              <button @click=\"actualiProduct\" class=\"btn btn-primary\">Actualizar producto</button>\r\n              <p class=\"d-none\">{{ idparactuproduc }}</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\n\r\nimport Swal from 'sweetalert2'\r\n\r\nexport default {\r\n  name: 'ActProd',\r\n  data() {\r\n    return {\r\n      cantVen: '',\r\n      Costunit: 0,\r\n      pric: 0,\r\n      canti: 0,\r\n      Facturas: false,\r\n      descriptio: '',\r\n      datoscant: [],\r\n      datoscat: [],\r\n      idNeg: 1,\r\n      selectfile: null,\r\n      props: this.$props\r\n    };\r\n  },\r\n  mounted() {\r\n    this.Cantidades();\r\n    this.Categorias();\r\n  },\r\n  props: {\r\n    idparactuproduc: Object\r\n  },\r\n  methods: {\r\n    async Cantidades() {\r\n      try {\r\n        const response = await axios.get('http://localhost:3000/cantidadproducDos');\r\n        this.datoscant = response.data.results;\r\n      } catch (error) {\r\n        console.error('Error al obtener las cantidades:', error);\r\n        alert('Error al obtener las cantidades');\r\n      }\r\n    },\r\n    async Categorias() {\r\n      try {\r\n        const response = await axios.get('http://localhost:3000/categoriaproducto');\r\n        this.datoscat = response.data.results;\r\n      } catch (error) {\r\n        console.error('Error al obtener las categorias:', error);\r\n        alert('Error al obtener las categorias');\r\n      }\r\n    },\r\n    onFileChange(event) {\r\n      this.selectfile = event.target.files[0];\r\n    },\r\n    async actualiProduct() {\r\n      const formData = new FormData();\r\n      formData.append('Datos', this.selectfile);\r\n      formData.append('productName', this.props.idparactuproduc.nombre);\r\n      formData.append('Costunit', this.props.idparactuproduc.presioprod);\r\n      formData.append('price', this.props.idparactuproduc.Presiovent);\r\n      formData.append('cantid', this.props.idparactuproduc.cantid);\r\n      formData.append('Factura', this.props.idparactuproduc.Facturas);\r\n      formData.append('description', this.props.idparactuproduc.Desc);\r\n      formData.append('idneg', this.idNeg);\r\n      formData.append('idimg', this.props.idparactuproduc.id);\r\n      formData.append('codigobarras', this)  // Suponiendo que el id de la imagen es el id del producto\r\n\r\n      try {\r\n        const response = await axios.put(`http://localhost:3000/actualizarproducto/${this.props.idparactuproduc.id}`, formData, {\r\n          headers: {\r\n            'Content-Type': 'multipart/form-data'\r\n          }\r\n        });\r\n        console.log('Respuesta del servidor:', response.data);\r\n        //alert('Producto actualizado con éxito');\r\n        this.$emit(\"mostrarprod\");\r\n        Swal.fire({\r\n          position: \"top\",\r\n          icon: \"success\",\r\n          title: \"Producto actualizado con exito\",\r\n          showConfirmButton: false,\r\n          timer: 1500\r\n        });\r\n      } catch (error) {\r\n        console.error('Error al actualizar el producto:', error);\r\n        alert('Error al actualizar el producto: ' + error.message);\r\n      }\r\n    },\r\n    resetForm() {\r\n      this.selectfile = null;\r\n      this.props.idparactuproduc.nombre = '';\r\n      this.props.idparactuproduc.presioprod = 0;\r\n      this.props.idparactuproduc.Presiovent = 0;\r\n      this.props.idparactuproduc.cantid = 0;\r\n      this.Factura = '';\r\n      this.props.idparactuproduc.Desc = '';\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n\r\n<style scoped>\r\ninput {\r\n  border: 1px solid rgba(0, 0, 0, 0.378);\r\n}\r\n\r\nselect {\r\n  border: 1px solid rgba(0, 0, 0, 0.378);\r\n}\r\n\r\noption {\r\n  border: 1px solid rgba(0, 0, 0, 0.378);\r\n}\r\n\r\ntextarea {\r\n  border: 1px solid rgba(0, 0, 0, 0.378);\r\n}\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}