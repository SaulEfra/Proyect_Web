{"ast":null,"code":"import axios from 'axios';\nexport default {\n  name: 'NuevoGasto',\n  props: {\n    datosCajaAbierta: {\n      type: Object,\n      required: true\n    }\n  },\n  data() {\n    return {\n      FechaGasto: '',\n      ValorGasto: '',\n      NombreGasto: ''\n    };\n  },\n  methods: {\n    async NuevoGasto() {\n      const IDAbrirCaja = this.datosCajaAbierta.IDAbrirCaja;\n      const formData = {\n        FechaGasto: this.FechaGasto,\n        NombreGasto: this.NombreGasto,\n        ValorGasto: this.ValorGasto,\n        IDAbrirCaja: IDAbrirCaja // Solo enviar IDAbrirCaja\n      };\n      try {\n        const response = await axios.post('http://localhost:3000/NuevoGasto', formData);\n        console.log('Respuesta del servidor:', response.data);\n        alert('Gasto registrado correctamente.');\n\n        // Obtener los datos del último registro\n        const dataResponse = await axios.get('http://localhost:3000/UltimoGasto');\n        const datosGasto = dataResponse.data;\n        alert(`Último Gasto Registrado:\n            ID Gasto: ${datosGasto.IDGasto}\n            Nombre Gasto: ${datosGasto.NombreGasto}\n            Fecha Gasto: ${datosGasto.FechaGasto}\n            Valor Gasto: ${datosGasto.ValorGasto}`);\n        this.limpiarDatos(); // Limpiar datos\n      } catch (error) {\n        console.error('Error al registrar el gasto:', error);\n        alert('Error al registrar el gasto: ' + error.message);\n      }\n    },\n    limpiarDatos() {\n      this.FechaGasto = '';\n      this.ValorGasto = '';\n      this.NombreGasto = '';\n    }\n  }\n};","map":{"version":3,"names":["axios","name","props","datosCajaAbierta","type","Object","required","data","FechaGasto","ValorGasto","NombreGasto","methods","NuevoGasto","IDAbrirCaja","formData","response","post","console","log","alert","dataResponse","get","datosGasto","IDGasto","limpiarDatos","error","message"],"sources":["D:\\Vers_Git_Proyecto\\Proyect_Web\\src\\components\\NuevoGasto.vue"],"sourcesContent":["<template>\r\n    <div>\r\n      <form @submit.prevent=\"NuevoGasto\">\r\n        <div class=\"btn-group\" role=\"group\" aria-label=\"Basic radio toggle button group\">\r\n          <input type=\"radio\" class=\"btn-check\" name=\"btnradio\" id=\"btnradio1\" autocomplete=\"off\"  value=\"Pagada\" checked>\r\n          <label class=\"btn btn-outline-primary\" for=\"btnradio1\">Pagada</label>\r\n  \r\n          <input type=\"radio\" class=\"btn-check\" name=\"btnradio\" id=\"btnradio2\" autocomplete=\"off\"  value=\"En Deuda\">\r\n          <label class=\"btn btn-outline-primary\" for=\"btnradio2\">En Deuda</label>\r\n        </div>\r\n        <div class=\"mb-3\">\r\n          <label for=\"FechaGasto\" class=\"form-label\">Fecha</label>\r\n          <input type=\"date\" class=\"form-control\" id=\"FechaGasto\" v-model=\"FechaGasto\" required>\r\n        </div>\r\n        <div class=\"mb-3\">\r\n          <label for=\"categ\" class=\"form-label\">Categoría del gasto</label>\r\n          <select  id=\"categ\" class=\"form-select\" aria-label=\"Default select example\">\r\n            <option disabled selected>Selecciona una categoría</option>\r\n            <option value=\"Categoría 1\">Categoría 1</option>\r\n            <option value=\"Categoría 2\">Categoría 2</option>\r\n            <option value=\"Categoría 3\">Categoría 3</option>\r\n          </select>\r\n        </div>\r\n        <div class=\"mb-3\">\r\n          <label for=\"ValorGasto\" class=\"form-label\">Valor</label>\r\n          <input type=\"number\" class=\"form-control\" id=\"ValorGasto\" v-model=\"ValorGasto\" required>\r\n        </div>\r\n        <div class=\"mb-3\">\r\n          <label for=\"NombreGasto\" class=\"form-label\">¿Quieres darle un nombre a este gasto?</label>\r\n          <input type=\"text\" placeholder=\"Escríbelo aquí\" class=\"form-control\" id=\"NombreGasto\" v-model=\"NombreGasto\">\r\n        </div>\r\n        <div class=\"mb-3\">\r\n          <label for=\"ProveedorGasto\" class=\"form-label\">Agrega un proveedor al gasto</label>\r\n          <input type=\"text\" placeholder=\"Buscar...\" class=\"form-control\" id=\"ProveedorGasto\" >\r\n        </div>\r\n        <button type=\"submit\" class=\"btn btn-primary\">Guardar</button>\r\n      </form>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import axios from 'axios';\r\n  \r\n  export default {\r\n    name: 'NuevoGasto',\r\n    props: {\r\n      datosCajaAbierta: {\r\n        type: Object,\r\n        required: true\r\n      }\r\n    },\r\n    data() {\r\n      return {\r\n        FechaGasto: '',\r\n        ValorGasto: '',\r\n        NombreGasto: '',\r\n        \r\n      };\r\n    },\r\n    methods: {\r\n      async NuevoGasto() {\r\n        const IDAbrirCaja = this.datosCajaAbierta.IDAbrirCaja;\r\n        const formData = {\r\n          \r\n          FechaGasto: this.FechaGasto,\r\n          NombreGasto: this.NombreGasto,\r\n          ValorGasto: this.ValorGasto,\r\n          IDAbrirCaja: IDAbrirCaja // Solo enviar IDAbrirCaja\r\n          \r\n          \r\n        };\r\n        try {\r\n          const response = await axios.post('http://localhost:3000/NuevoGasto', formData);\r\n          console.log('Respuesta del servidor:', response.data);\r\n          alert('Gasto registrado correctamente.');\r\n  \r\n          // Obtener los datos del último registro\r\n          const dataResponse = await axios.get('http://localhost:3000/UltimoGasto');\r\n          const datosGasto = dataResponse.data;\r\n          alert(`Último Gasto Registrado:\r\n            ID Gasto: ${datosGasto.IDGasto}\r\n            Nombre Gasto: ${datosGasto.NombreGasto}\r\n            Fecha Gasto: ${datosGasto.FechaGasto}\r\n            Valor Gasto: ${datosGasto.ValorGasto}`);\r\n  \r\n          this.limpiarDatos(); // Limpiar datos\r\n  \r\n        } catch (error) {\r\n          console.error('Error al registrar el gasto:', error);\r\n          alert('Error al registrar el gasto: ' + error.message);\r\n        }\r\n      },\r\n      limpiarDatos() {\r\n        \r\n        this.FechaGasto = '';\r\n        this.ValorGasto = '';\r\n        this.NombreGasto = '';\r\n        \r\n      },\r\n    },\r\n  };\r\n  </script>\r\n  \r\n  <style scoped>\r\n  .form-group {\r\n    margin-bottom: 15px;\r\n  }\r\n  \r\n  .btn-primary {\r\n    background-color: #007bff;\r\n    border-color: #007bff;\r\n    text-align: end;\r\n  }\r\n  \r\n  .btn-primary:hover {\r\n    background-color: #0056b3;\r\n    border-color: #0056b3;\r\n  }\r\n  </style>\r\n  \r\n  \r\n  \r\n  \r\n  "],"mappings":"AAyCE,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAI,EAAE,YAAY;EAClBC,KAAK,EAAE;IACLC,gBAAgB,EAAE;MAChBC,IAAI,EAAEC,MAAM;MACZC,QAAQ,EAAE;IACZ;EACF,CAAC;EACDC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,UAAU,EAAE,EAAE;MACdC,UAAU,EAAE,EAAE;MACdC,WAAW,EAAE;IAEf,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,UAAUA,CAAA,EAAG;MACjB,MAAMC,WAAU,GAAI,IAAI,CAACV,gBAAgB,CAACU,WAAW;MACrD,MAAMC,QAAO,GAAI;QAEfN,UAAU,EAAE,IAAI,CAACA,UAAU;QAC3BE,WAAW,EAAE,IAAI,CAACA,WAAW;QAC7BD,UAAU,EAAE,IAAI,CAACA,UAAU;QAC3BI,WAAW,EAAEA,WAAU,CAAE;MAG3B,CAAC;MACD,IAAI;QACF,MAAME,QAAO,GAAI,MAAMf,KAAK,CAACgB,IAAI,CAAC,kCAAkC,EAAEF,QAAQ,CAAC;QAC/EG,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAAEH,QAAQ,CAACR,IAAI,CAAC;QACrDY,KAAK,CAAC,iCAAiC,CAAC;;QAExC;QACA,MAAMC,YAAW,GAAI,MAAMpB,KAAK,CAACqB,GAAG,CAAC,mCAAmC,CAAC;QACzE,MAAMC,UAAS,GAAIF,YAAY,CAACb,IAAI;QACpCY,KAAK,CAAC;wBACQG,UAAU,CAACC,OAAO;4BACdD,UAAU,CAACZ,WAAW;2BACvBY,UAAU,CAACd,UAAU;2BACrBc,UAAU,CAACb,UAAU,EAAE,CAAC;QAEzC,IAAI,CAACe,YAAY,CAAC,CAAC,EAAE;MAEvB,EAAE,OAAOC,KAAK,EAAE;QACdR,OAAO,CAACQ,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;QACpDN,KAAK,CAAC,+BAA8B,GAAIM,KAAK,CAACC,OAAO,CAAC;MACxD;IACF,CAAC;IACDF,YAAYA,CAAA,EAAG;MAEb,IAAI,CAAChB,UAAS,GAAI,EAAE;MACpB,IAAI,CAACC,UAAS,GAAI,EAAE;MACpB,IAAI,CAACC,WAAU,GAAI,EAAE;IAEvB;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}