{"ast":null,"code":"import { openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-42179193\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"row\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1"],"sources":["C:\\Users\\Kenny\\Downloads\\Proyect\\Proyect_Web\\src\\components\\Productos.vue"],"sourcesContent":["<template>\r\n  <div class=\"row\">\r\n\r\n  </div>\r\n  \r\n  \r\n</template>\r\n\r\n<script>\r\nimport CardProduct from './CardProduct.vue';\r\nimport AddProductForm from './AddProductForm.vue';\r\nimport axios from 'axios';\r\nimport ActProd from './ActProducto.vue';\r\nimport ParteLateral from '../components/ParteLateral.vue';\r\nexport default {\r\n  name: 'ProductInventory',\r\n  components: {\r\n    AddProductForm,\r\n    CardProduct,\r\n    ActProd,\r\n    ParteLateral\r\n  },\r\n  data() {\r\n    return {\r\n      searchQuery: '',\r\n      totalReferences: 0,\r\n      inventoryCost: 50,\r\n      categoriaName: '',\r\n      CantidadProduc: '',\r\n      datosprod: [],\r\n      datosprodcount: [],\r\n      datoselim: [],\r\n      idparaact: [],\r\n      categoriacreada: false\r\n    };\r\n  },\r\n  mounted() {\r\n    this.Productos();\r\n    this.Productoscount();\r\n    \r\n  },\r\n  \r\n  methods: {\r\n    async Productos() {\r\n      try {\r\n        const response = await axios.get('http://localhost:3000/Producto');\r\n        this.datosprod = response.data.results;\r\n        console.log(this.datosprod);\r\n      } catch (error) {\r\n        console.error('Error al obtener los productos:', error);\r\n        alert('Error al obtener los productos');\r\n      }\r\n    },\r\n    async createCategoriaProd() {\r\n      const formData = {\r\n        categoriaName: this.categoriaName\r\n      };\r\n      try {\r\n        const response = await axios.post('http://localhost:3000/categorias', formData);\r\n        console.log('Respuesta del servidor:', response.data); \r\n        alert('Categoría creada con éxito');\r\n        this.categoriaName = \"\";\r\n        this.categoriacreada = true;\r\n      } catch (error) {\r\n        console.error('Error al crear el producto:', error);\r\n        //alert('Error al crear la categoría: ' + error.message);\r\n      }\r\n    },\r\n    async createCantidadProduct() {\r\n      const formData = {\r\n        CantidadProduc: this.CantidadProduc\r\n      };\r\n      try {\r\n        const response = await axios.post('http://localhost:3000/cantidadproduc', formData);\r\n        console.log('Respuesta del servidor:', response.data); \r\n        alert('Cantidad creada con éxito');\r\n        this.CantidadProduc = \"\";\r\n        this.Cantidades();\r\n      } catch (error) {\r\n        console.error('Error al crear el producto:', error);\r\n        //alert('Error al crear la cantidad: ' + error.message);\r\n      }     \r\n    },\r\n    async Productoscount() {\r\n      try {\r\n        const response = await axios.get('http://localhost:3000/Productocont');\r\n        this.datosprodcount = response.data.results; \r\n      } catch (error) {\r\n        console.error('Error al obtener los productos:', error);\r\n        alert('Error al obtener los productos');\r\n      }\r\n    },\r\n    async eliminarProducto(prop) {\r\n      console.log(prop);\r\n      try {\r\n        axios.delete(`http://localhost:3000/productoselim/${prop}`)\r\n          .then(response => {\r\n            console.log(response.data);\r\n            this.Productos();\r\n          });\r\n      } catch (error) {\r\n        console.error('Error al obtener los productos:', error);\r\n        alert('Error al obtener los productos');\r\n      }\r\n    },\r\n    async actualiProductprueb(prop) {\r\n      console.log(prop);\r\n      let datosprod = prop;\r\n      this.idparaact = datosprod;\r\n      alert(datosprod);\r\n    },\r\n   \r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n\r\n.header {\r\n  display: flex;\r\n  align-items: center;\r\n  padding: 10px;\r\n  border-bottom: 1px solid #ccc;\r\n  margin-top: 20px;\r\n}\r\n.movements{\r\n  padding-bottom: 80px;\r\n\r\n}\r\n.data-pro{\r\n  text-align: center;\r\n  height: 50px;\r\n  width: 500px;\r\n  background-color: #D5E4FF;\r\n  flex-direction: row;\r\n  margin-left: 60px;\r\n  padding: 10px;\r\n  border-radius: 10px;\r\n  \r\n}\r\n\r\n.btn{\r\n  padding: 10px;\r\n  font-size: 14px;\r\n  border: 1px solid rgb(137, 149, 226);\r\n  border-radius: 5px;\r\n  background-color: #eff5ff;\r\n  cursor: pointer;\r\n  height: 50px;\r\n  width: 150px;\r\n  color: black;\r\n  margin-left: 20px;\r\n}\r\n\r\n\r\n.btn:hover{\r\n  background-color: #bdd6ff;\r\n  color: white;\r\n  border: 1px solid rgb(120, 134, 223);\r\n}\r\n\r\n\r\n/* aca empiezan mis estilos */ \r\n.btn-close{\r\n  height: 50px;\r\n  width: 50px;\r\n}\r\n.card{\r\n  margin-top: 20px;\r\n  margin-left: 50px;\r\n}\r\n.karproducto{\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  flex-direction: row;\r\n  margin-top: 20px\r\n}\r\n.header-btn{\r\n  padding: 20px;\r\n  padding-top: 40px;\r\n  margin-top: 20px;\r\n  margin-bottom: 20px;\r\n}\r\n.inp-btn{\r\n  height: 50px;\r\n}\r\n</style>\r\n\r\n"],"mappings":";;;EACOA,KAAK,EAAC;AAAK;;uBAAhBC,mBAAA,CAEM,OAFNC,UAEM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}