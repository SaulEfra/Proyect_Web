{"ast":null,"code":"import axios from 'axios';\nexport default {\n  name: 'AbrirCaja',\n  data() {\n    return {\n      montoInicial: '',\n      // Monto inicial de la caja\n      fechaHora: '' // Fecha y hora actual\n    };\n  },\n  mounted() {\n    // Establece la fecha y hora actual al montarse el componente\n    this.fechaHora = new Date().toISOString().slice(0, 16);\n  },\n  methods: {\n    async abrirCaja() {\n      try {\n        // Prepara los datos para enviar al servidor\n        const formData = {\n          fechaHora: this.fechaHora,\n          montoInicial: this.montoInicial\n        };\n\n        // Envía la solicitud para abrir la caja\n        const openResponse = await axios.post('http://localhost:3000/AbrirCaja', formData, {\n          withCredentials: true\n        });\n        console.log('Respuesta del servidor:', openResponse.data);\n        alert('Se abrió caja correctamente');\n\n        // Limpia los datos del formulario\n        this.limpiarDatos();\n\n        // Emite el evento con los datos de la caja abierta\n        this.$emit('caja-abierta', openResponse.data);\n      } catch (error) {\n        // Maneja cualquier error que ocurra durante la solicitud\n        console.error('Error al abrir caja:', error);\n        alert('Error al abrir caja: ' + error.message);\n      }\n    },\n    limpiarDatos() {\n      // Limpia el campo de monto inicial\n      this.montoInicial = '';\n    }\n  }\n};","map":{"version":3,"names":["axios","name","data","montoInicial","fechaHora","mounted","Date","toISOString","slice","methods","abrirCaja","formData","openResponse","post","withCredentials","console","log","alert","limpiarDatos","$emit","error","message"],"sources":["D:\\Vers_Git_Proyecto\\Proyect_Web\\src\\components\\AbrirCaja.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <form @submit.prevent=\"abrirCaja\">\r\n      <div class=\"form-group\">\r\n        <label for=\"montoInicial\">Monto Inicial</label>\r\n        <input\r\n          type=\"number\"\r\n          id=\"montoInicial\"\r\n          v-model=\"montoInicial\"\r\n          class=\"form-control\"\r\n          placeholder=\"Ingrese el monto inicial\"\r\n          required\r\n        />\r\n      </div>\r\n      <button type=\"submit\" class=\"btn btn-primary mt-3\">Abrir Caja</button>\r\n    </form>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  name: 'AbrirCaja',\r\n  data() {\r\n    return {\r\n      montoInicial: '', // Monto inicial de la caja\r\n      fechaHora: '',    // Fecha y hora actual\r\n    };\r\n  },\r\n  mounted() {\r\n    // Establece la fecha y hora actual al montarse el componente\r\n    this.fechaHora = new Date().toISOString().slice(0, 16);\r\n  },\r\n  methods: {\r\n    async abrirCaja() {\r\n      try {\r\n        // Prepara los datos para enviar al servidor\r\n        const formData = {\r\n          fechaHora: this.fechaHora,\r\n          montoInicial: this.montoInicial,\r\n        };\r\n\r\n        // Envía la solicitud para abrir la caja\r\n        const openResponse = await axios.post('http://localhost:3000/AbrirCaja', formData, { withCredentials: true });\r\n        console.log('Respuesta del servidor:', openResponse.data);\r\n        alert('Se abrió caja correctamente');\r\n\r\n        // Limpia los datos del formulario\r\n        this.limpiarDatos();\r\n\r\n        // Emite el evento con los datos de la caja abierta\r\n        this.$emit('caja-abierta', openResponse.data);\r\n      } catch (error) {\r\n        // Maneja cualquier error que ocurra durante la solicitud\r\n        console.error('Error al abrir caja:', error);\r\n        alert('Error al abrir caja: ' + error.message);\r\n      }\r\n    },\r\n    limpiarDatos() {\r\n      // Limpia el campo de monto inicial\r\n      this.montoInicial = '';\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.form-group {\r\n  margin-bottom: 15px;\r\n}\r\n\r\n.btn-primary {\r\n  background-color: #007bff;\r\n  border-color: #007bff;\r\n  text-align: end;\r\n}\r\n\r\n.btn-primary:hover {\r\n  background-color: #0056b3;\r\n  border-color: #0056b3;\r\n}\r\n</style>\r\n"],"mappings":"AAoBA,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAI,EAAE,WAAW;EACjBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,YAAY,EAAE,EAAE;MAAE;MAClBC,SAAS,EAAE,EAAE,CAAK;IACpB,CAAC;EACH,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR;IACA,IAAI,CAACD,SAAQ,GAAI,IAAIE,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC;EACxD,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,SAASA,CAAA,EAAG;MAChB,IAAI;QACF;QACA,MAAMC,QAAO,GAAI;UACfP,SAAS,EAAE,IAAI,CAACA,SAAS;UACzBD,YAAY,EAAE,IAAI,CAACA;QACrB,CAAC;;QAED;QACA,MAAMS,YAAW,GAAI,MAAMZ,KAAK,CAACa,IAAI,CAAC,iCAAiC,EAAEF,QAAQ,EAAE;UAAEG,eAAe,EAAE;QAAK,CAAC,CAAC;QAC7GC,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAAEJ,YAAY,CAACV,IAAI,CAAC;QACzDe,KAAK,CAAC,6BAA6B,CAAC;;QAEpC;QACA,IAAI,CAACC,YAAY,CAAC,CAAC;;QAEnB;QACA,IAAI,CAACC,KAAK,CAAC,cAAc,EAAEP,YAAY,CAACV,IAAI,CAAC;MAC/C,EAAE,OAAOkB,KAAK,EAAE;QACd;QACAL,OAAO,CAACK,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;QAC5CH,KAAK,CAAC,uBAAsB,GAAIG,KAAK,CAACC,OAAO,CAAC;MAChD;IACF,CAAC;IACDH,YAAYA,CAAA,EAAG;MACb;MACA,IAAI,CAACf,YAAW,GAAI,EAAE;IACxB;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}