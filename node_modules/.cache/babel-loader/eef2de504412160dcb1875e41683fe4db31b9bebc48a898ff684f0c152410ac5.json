{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport Swal from 'sweetalert2';\nexport default {\n  name: 'ClientesApp',\n  data() {\n    return {\n      mostrarFormulario: false,\n      clientes: [],\n      nuevoCliente: {\n        Nombre: '',\n        Telefono: '',\n        Adeudos: 0\n      },\n      modoEdicion: false,\n      busqueda: '',\n      clienteSeleccionado: null,\n      modalTitulo: '',\n      cantidadAdeudoAbono: 0,\n      esAdeudo: true,\n      mostrarModal: false,\n      swalWithBootstrapButtons: Swal.mixin({\n        customClass: {\n          confirmButton: \"btn btn-success\",\n          cancelButton: \"btn btn-danger\"\n        },\n        buttonsStyling: false\n      })\n    };\n  },\n  computed: {\n    clientesFiltrados() {\n      if (this.busqueda) {\n        return this.clientes.filter(cliente => cliente.Nombre.toLowerCase().includes(this.busqueda.toLowerCase()));\n      }\n      return this.clientes;\n    }\n  },\n  methods: {\n    agregarCliente() {\n      if (this.modoEdicion) {\n        this.swalWithBootstrapButtons.fire({\n          title: \"¿Actualizar cliente?\",\n          text: \"¿Está seguro de que desea actualizar este cliente?\",\n          icon: \"question\",\n          showCancelButton: true,\n          confirmButtonText: \"Sí, actualizar\",\n          cancelButtonText: \"Cancelar\",\n          reverseButtons: true\n        }).then(result => {\n          if (result.isConfirmed) {\n            const index = this.clientes.findIndex(cli => cli.id === this.nuevoCliente.id);\n            if (index !== -1) {\n              this.clientes[index] = {\n                ...this.nuevoCliente\n              };\n            }\n            this.resetearFormulario();\n            Swal.fire({\n              title: \"Cliente actualizado\",\n              icon: \"success\"\n            });\n          }\n        });\n      } else {\n        const nuevoId = Date.now().toString();\n        this.clientes.push({\n          ...this.nuevoCliente,\n          id: nuevoId\n        });\n        this.resetearFormulario();\n        Swal.fire({\n          title: \"Cliente añadido\",\n          icon: \"success\"\n        });\n      }\n    },\n    editarCliente(cliente) {\n      this.nuevoCliente = {\n        ...cliente\n      };\n      this.modoEdicion = true;\n      this.mostrarFormulario = true;\n    },\n    borrarCliente(id) {\n      this.swalWithBootstrapButtons.fire({\n        title: \"¿Está seguro?\",\n        text: \"No podrá revertir esta acción!\",\n        icon: \"warning\",\n        showCancelButton: true,\n        confirmButtonText: \"Sí, eliminar!\",\n        cancelButtonText: \"No, cancelar!\",\n        reverseButtons: true\n      }).then(result => {\n        if (result.isConfirmed) {\n          this.clientes = this.clientes.filter(cli => cli.id !== id);\n          this.swalWithBootstrapButtons.fire({\n            title: \"Eliminado!\",\n            text: \"El cliente ha sido eliminado.\",\n            icon: \"success\"\n          });\n        }\n      });\n    },\n    resetearFormulario() {\n      this.nuevoCliente = {\n        Nombre: '',\n        Telefono: '',\n        Adeudos: 0\n      };\n      this.mostrarFormulario = false;\n      this.modoEdicion = false;\n    },\n    cancelarEdicion() {\n      this.resetearFormulario();\n    },\n    validarTelefono(event) {\n      this.nuevoCliente.Telefono = event.target.value.replace(/[^0-9]/g, '');\n    },\n    buscarCliente() {\n      // La búsqueda se realiza automáticamente gracias a la propiedad computada\n    },\n    mostrarModalAdeudo(cliente) {\n      this.clienteSeleccionado = cliente;\n      this.modalTitulo = 'Añadir Adeudo';\n      this.esAdeudo = true;\n      this.cantidadAdeudoAbono = 0;\n      this.mostrarModal = true;\n    },\n    mostrarModalAbono(cliente) {\n      this.clienteSeleccionado = cliente;\n      this.modalTitulo = 'Añadir Abono';\n      this.esAdeudo = false;\n      this.cantidadAdeudoAbono = 0;\n      this.mostrarModal = true;\n    },\n    procesarAdeudoAbono() {\n      if (this.clienteSeleccionado) {\n        if (this.esAdeudo) {\n          this.clienteSeleccionado.Adeudos += this.cantidadAdeudoAbono;\n        } else {\n          if (this.cantidadAdeudoAbono > this.clienteSeleccionado.Adeudos) {\n            Swal.fire({\n              title: \"Error\",\n              text: \"El abono no puede ser mayor que el adeudo actual.\",\n              icon: \"error\"\n            });\n            return;\n          }\n          this.clienteSeleccionado.Adeudos -= this.cantidadAdeudoAbono;\n        }\n        this.actualizarCliente(this.clienteSeleccionado);\n        this.cerrarModal();\n        Swal.fire({\n          title: this.esAdeudo ? \"Adeudo añadido\" : \"Abono realizado\",\n          icon: \"success\"\n        });\n      }\n    },\n    actualizarCliente(cliente) {\n      const index = this.clientes.findIndex(c => c.id === cliente.id);\n      if (index !== -1) {\n        this.clientes[index] = {\n          ...cliente\n        };\n      }\n    },\n    cerrarModal() {\n      this.mostrarModal = false;\n    }\n  }\n};","map":{"version":3,"names":["Swal","name","data","mostrarFormulario","clientes","nuevoCliente","Nombre","Telefono","Adeudos","modoEdicion","busqueda","clienteSeleccionado","modalTitulo","cantidadAdeudoAbono","esAdeudo","mostrarModal","swalWithBootstrapButtons","mixin","customClass","confirmButton","cancelButton","buttonsStyling","computed","clientesFiltrados","filter","cliente","toLowerCase","includes","methods","agregarCliente","fire","title","text","icon","showCancelButton","confirmButtonText","cancelButtonText","reverseButtons","then","result","isConfirmed","index","findIndex","cli","id","resetearFormulario","nuevoId","Date","now","toString","push","editarCliente","borrarCliente","cancelarEdicion","validarTelefono","event","target","value","replace","buscarCliente","mostrarModalAdeudo","mostrarModalAbono","procesarAdeudoAbono","actualizarCliente","cerrarModal","c"],"sources":["C:\\Users\\R\\Documents\\Tareas 9cuatri\\Proyecto\\Proyect_Web\\src\\components\\ClientesTreinta.vue"],"sourcesContent":["<template>\r\n  <nav class=\"navbar bg-body-tertiary\">\r\n    <div class=\"container-fluid\">\r\n      <span class=\"navbar-brand\">\r\n        <h1>Clientes</h1>\r\n      </span>\r\n      <form class=\"d-flex\" @submit.prevent=\"buscarCliente\">\r\n        <input class=\"form-control me-2\" type=\"search\" v-model=\"busqueda\" placeholder=\"Buscar cliente\"\r\n          aria-label=\"Search\">\r\n        <button class=\"btn btn-outline-success\" type=\"submit\">Buscar</button>\r\n      </form>\r\n      <button v-if=\"!mostrarFormulario\" @click=\"mostrarFormulario = true\" class=\"btn btn-primary\">Añadir\r\n        Cliente</button>\r\n    </div>\r\n  </nav>\r\n  <div class=\"row mt-4\">\r\n    <div>\r\n      <table v-if=\"!mostrarFormulario\" class=\"table table-striped\">\r\n        <thead>\r\n          <tr>\r\n            <th scope=\"col\">Nombre del cliente</th>\r\n            <th scope=\"col\">Teléfono</th>\r\n            <th scope=\"col\">Adeudos</th>\r\n            <th scope=\"col\">Acciones</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody class=\"table-group-divider\">\r\n          <tr v-for=\"(cliente, indice) in clientesFiltrados\" :key=\"indice\">\r\n            <td>{{ cliente.Nombre }}</td>\r\n            <td>{{ cliente.Telefono }}</td>\r\n            <td>{{ cliente.Adeudos }}</td>\r\n            <td>\r\n              <div class=\"btn-group\" role=\"group\">\r\n                <button class=\"btn btn-secondary\" title=\"Editar\" @click=\"editarCliente(cliente)\">\r\n                  <i class=\"bi bi-pencil-square\"></i> Editar\r\n                </button>\r\n                <button class=\"btn btn-danger\" title=\"Eliminar\" @click=\"borrarCliente(cliente.id)\">\r\n                  <i class=\"bi bi-trash\"></i> Eliminar\r\n                </button>\r\n                <button class=\"btn btn-info\" title=\"Añadir Adeudo\" @click=\"mostrarModalAdeudo(cliente)\">\r\n                  <i class=\"bi bi-plus-circle\"></i> Adeudo\r\n                </button>\r\n                <button class=\"btn btn-success\" title=\"Añadir Abono\" @click=\"mostrarModalAbono(cliente)\">\r\n                  <i class=\"bi bi-dash-circle\"></i> Abono\r\n                </button>\r\n              </div>\r\n            </td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n      <form v-if=\"mostrarFormulario\" @submit.prevent=\"agregarCliente\">\r\n        <table class=\"table\">\r\n          <thead>\r\n            <tr>\r\n              <th scope=\"col\">Nombre del cliente</th>\r\n              <th scope=\"col\">Teléfono</th>\r\n              <th scope=\"col\">Adeudos</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody class=\"table-group-divider\">\r\n            <tr>\r\n              <td><input v-model=\"nuevoCliente.Nombre\" type=\"text\" required class=\"form-control\"></td>\r\n              <td>\r\n                <input v-model=\"nuevoCliente.Telefono\" type=\"text\" required class=\"form-control\"\r\n                  @input=\"validarTelefono\" pattern=\"[0-9]*\">\r\n              </td>\r\n              <td>\r\n                <input v-model.number=\"nuevoCliente.Adeudos\" type=\"number\" required class=\"form-control\" step=\"0.01\">\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n        <button type=\"submit\" class=\"btn btn-primary\">{{ modoEdicion ? 'Actualizar' : 'Añadir' }} Cliente</button>\r\n        <button @click=\"cancelarEdicion\" type=\"button\" class=\"btn btn-secondary ml-2\">Cancelar</button>\r\n      </form>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- Modal para Adeudos y Abonos -->\r\n  <div v-if=\"mostrarModal\" class=\"modal-backdrop fade show\"></div>\r\n  <div v-if=\"mostrarModal\" class=\"modal fade show\" tabindex=\"-1\" style=\"display: block;\">\r\n    <div class=\"modal-dialog\">\r\n      <div class=\"modal-content\">\r\n        <div class=\"modal-header\">\r\n          <h5 class=\"modal-title\">{{ modalTitulo }}</h5>\r\n          <button type=\"button\" class=\"btn-close\" @click=\"cerrarModal\"></button>\r\n        </div>\r\n        <div class=\"modal-body\">\r\n          <form @submit.prevent=\"procesarAdeudoAbono\">\r\n            <div class=\"mb-3\">\r\n              <label for=\"cantidad\" class=\"form-label\">Cantidad</label>\r\n              <input type=\"number\" class=\"form-control\" id=\"cantidad\" v-model.number=\"cantidadAdeudoAbono\" step=\"0.01\"\r\n                required>\r\n            </div>\r\n            <button type=\"submit\" class=\"btn btn-primary\">Confirmar</button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport Swal from 'sweetalert2'\r\n\r\nexport default {\r\n  name: 'ClientesApp',\r\n  data() {\r\n    return {\r\n      mostrarFormulario: false,\r\n      clientes: [],\r\n      nuevoCliente: {\r\n        Nombre: '',\r\n        Telefono: '',\r\n        Adeudos: 0\r\n      },\r\n      modoEdicion: false,\r\n      busqueda: '',\r\n      clienteSeleccionado: null,\r\n      modalTitulo: '',\r\n      cantidadAdeudoAbono: 0,\r\n      esAdeudo: true,\r\n      mostrarModal: false,\r\n      swalWithBootstrapButtons: Swal.mixin({\r\n        customClass: {\r\n          confirmButton: \"btn btn-success\",\r\n          cancelButton: \"btn btn-danger\"\r\n        },\r\n        buttonsStyling: false\r\n      })\r\n    }\r\n  },\r\n  computed: {\r\n    clientesFiltrados() {\r\n      if (this.busqueda) {\r\n        return this.clientes.filter(cliente => cliente.Nombre.toLowerCase().includes(this.busqueda.toLowerCase()))\r\n      }\r\n      return this.clientes\r\n    }\r\n  },\r\n  methods: {\r\n    agregarCliente() {\r\n      if (this.modoEdicion) {\r\n        this.swalWithBootstrapButtons.fire({\r\n          title: \"¿Actualizar cliente?\",\r\n          text: \"¿Está seguro de que desea actualizar este cliente?\",\r\n          icon: \"question\",\r\n          showCancelButton: true,\r\n          confirmButtonText: \"Sí, actualizar\",\r\n          cancelButtonText: \"Cancelar\",\r\n          reverseButtons: true\r\n        }).then((result) => {\r\n          if (result.isConfirmed) {\r\n            const index = this.clientes.findIndex(cli => cli.id === this.nuevoCliente.id)\r\n            if (index !== -1) {\r\n              this.clientes[index] = { ...this.nuevoCliente }\r\n            }\r\n            this.resetearFormulario()\r\n            Swal.fire({\r\n              title: \"Cliente actualizado\",\r\n              icon: \"success\",\r\n            });\r\n          }\r\n        });\r\n      } else {\r\n        const nuevoId = Date.now().toString()\r\n        this.clientes.push({ ...this.nuevoCliente, id: nuevoId })\r\n        this.resetearFormulario()\r\n        Swal.fire({\r\n          title: \"Cliente añadido\",\r\n          icon: \"success\",\r\n        });\r\n      }\r\n    },\r\n    editarCliente(cliente) {\r\n      this.nuevoCliente = { ...cliente }\r\n      this.modoEdicion = true\r\n      this.mostrarFormulario = true\r\n    },\r\n    borrarCliente(id) {\r\n      this.swalWithBootstrapButtons.fire({\r\n        title: \"¿Está seguro?\",\r\n        text: \"No podrá revertir esta acción!\",\r\n        icon: \"warning\",\r\n        showCancelButton: true,\r\n        confirmButtonText: \"Sí, eliminar!\",\r\n        cancelButtonText: \"No, cancelar!\",\r\n        reverseButtons: true\r\n      }).then((result) => {\r\n        if (result.isConfirmed) {\r\n          this.clientes = this.clientes.filter(cli => cli.id !== id)\r\n          this.swalWithBootstrapButtons.fire({\r\n            title: \"Eliminado!\",\r\n            text: \"El cliente ha sido eliminado.\",\r\n            icon: \"success\"\r\n          });\r\n        }\r\n      });\r\n    },\r\n    resetearFormulario() {\r\n      this.nuevoCliente = {\r\n        Nombre: '',\r\n        Telefono: '',\r\n        Adeudos: 0\r\n      }\r\n      this.mostrarFormulario = false\r\n      this.modoEdicion = false\r\n    },\r\n    cancelarEdicion() {\r\n      this.resetearFormulario()\r\n    },\r\n    validarTelefono(event) {\r\n      this.nuevoCliente.Telefono = event.target.value.replace(/[^0-9]/g, '')\r\n    },\r\n    buscarCliente() {\r\n      // La búsqueda se realiza automáticamente gracias a la propiedad computada\r\n    },\r\n    mostrarModalAdeudo(cliente) {\r\n      this.clienteSeleccionado = cliente\r\n      this.modalTitulo = 'Añadir Adeudo'\r\n      this.esAdeudo = true\r\n      this.cantidadAdeudoAbono = 0\r\n      this.mostrarModal = true\r\n    },\r\n    mostrarModalAbono(cliente) {\r\n      this.clienteSeleccionado = cliente\r\n      this.modalTitulo = 'Añadir Abono'\r\n      this.esAdeudo = false\r\n      this.cantidadAdeudoAbono = 0\r\n      this.mostrarModal = true\r\n    },\r\n    procesarAdeudoAbono() {\r\n      if (this.clienteSeleccionado) {\r\n        if (this.esAdeudo) {\r\n          this.clienteSeleccionado.Adeudos += this.cantidadAdeudoAbono\r\n        } else {\r\n          if (this.cantidadAdeudoAbono > this.clienteSeleccionado.Adeudos) {\r\n            Swal.fire({\r\n              title: \"Error\",\r\n              text: \"El abono no puede ser mayor que el adeudo actual.\",\r\n              icon: \"error\",\r\n            });\r\n            return\r\n          }\r\n          this.clienteSeleccionado.Adeudos -= this.cantidadAdeudoAbono\r\n        }\r\n        this.actualizarCliente(this.clienteSeleccionado)\r\n        this.cerrarModal()\r\n        Swal.fire({\r\n          title: this.esAdeudo ? \"Adeudo añadido\" : \"Abono realizado\",\r\n          icon: \"success\",\r\n        });\r\n      }\r\n    },\r\n    actualizarCliente(cliente) {\r\n      const index = this.clientes.findIndex(c => c.id === cliente.id)\r\n      if (index !== -1) {\r\n        this.clientes[index] = { ...cliente }\r\n      }\r\n    },\r\n    cerrarModal() {\r\n      this.mostrarModal = false\r\n    }\r\n  }\r\n}\r\n</script>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}