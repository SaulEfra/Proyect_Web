{"ast":null,"code":"//se esta utilisando option api \nimport axios from 'axios';\nexport default {\n  name: 'AddProductForm',\n  data() {\n    return {\n      productName: '',\n      cantVent: '',\n      unitCost: null,\n      cantid: 1,\n      price: null,\n      category: '',\n      description: '',\n      selectedFile: null,\n      Factura: '',\n      datoscant: [],\n      datoscat: []\n    };\n  },\n  mounted() {\n    this.Cantidades();\n    this.Categorias();\n  },\n  methods: {\n    async Cantidades() {\n      try {\n        const response = await axios.get('http://localhost:3000/cantidadproducDos');\n        this.datoscant = response.data.results;\n      } catch (error) {\n        console.error('Error al obtener las cantidades:', error);\n        alert('Error al obtener las cantidades');\n      }\n    },\n    async Categorias() {\n      try {\n        const response = await axios.get('http://localhost:3000/categoriaproducto');\n        this.datoscat = response.data.results;\n      } catch (error) {\n        console.error('Error al obtener las categorias:', error);\n        alert('Error al obtener las categorias');\n      }\n    },\n    onFileChange(event) {\n      this.selectedFile = event.target.files[0];\n    },\n    async createProduct() {\n      const formData = {\n        selectedFile: this.selectedFile,\n        productName: this.productName,\n        cantVent: this.cantVent,\n        unitCost: this.unitCost,\n        price: this.price,\n        cantid: this.cantid,\n        category: this.category,\n        Factura: this.Factura,\n        description: this.description\n      };\n      try {\n        const response = await axios.post('http://localhost:3000/productos', formData);\n        console.log('Respuesta del servidor:', response.data);\n        alert('Cantidad creada con éxito');\n        // como borrar los datos this.CantidadProduc = \"\"\n        this.productName = \"\", this.cantVent = \"\", this.unitCost = \"\", this.price = \"\", this.cantid = \"\", this.category = \"\", this.Factura = \"\", this.description = \"\";\n      } catch (error) {\n        console.error('Error al crear el producto:', error);\n        alert('Error al crear la cantidad: ' + error.message);\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","name","data","productName","cantVent","unitCost","cantid","price","category","description","selectedFile","Factura","datoscant","datoscat","mounted","Cantidades","Categorias","methods","response","get","results","error","console","alert","onFileChange","event","target","files","createProduct","formData","post","log","message"],"sources":["C:\\Users\\Kenny\\Downloads\\Proyect\\Proyect_Web\\src\\components\\AddProductForm.vue"],"sourcesContent":["<template>\r\n  <div class=\"container mt-5\">\r\n    <div class=\"row justify-content-center\">\r\n      <div class=\"col-lg-12\">\r\n        <div class=\"card\">\r\n          <div class=\"card-body\">\r\n            <div class=\"mb-3\">\r\n              <label for=\"fileUpload\" class=\"form-label\">Selecciona una imagen para subir</label>\r\n              <input type=\"file\" class=\"form-control\" id=\"fileUpload\" accept=\"image/*\" @change=\"onFileChange\">\r\n            </div>\r\n            <div class=\"row\">\r\n              <div class=\"col-lg-6\">\r\n                <div class=\"mb-3\">\r\n                  <label for=\"NameProduct\" class=\"form-label\">Nombre de producto</label>\r\n                  <input v-model=\"productName\" id=\"NameProduct\" type=\"text\" class=\"form-control\">\r\n                </div>\r\n                <div class=\"mb-3\">\r\n                  <label for=\"categ\" class=\"form-label\">Cantidad de venta</label>\r\n                  <select v-model=\"cantVent\" id=\"categ\" class=\"form-select\" aria-label=\"Default select example\">\r\n                    <option v-for=\"cant in datoscant\" :key=\"cant.IDCantidad\">{{ cant.NombreCantidad }}</option>\r\n                  </select>\r\n                </div>\r\n                <div class=\"mb-3\">\r\n                  <label for=\"CostUni\" class=\"form-label\">Costo Unitario</label>\r\n                  <input v-model.number=\"unitCost\" id=\"CostUni\" type=\"number\" class=\"form-control\">\r\n                </div>\r\n                <div class=\"mb-3\">\r\n                  <label for=\"preci\" class=\"form-label\">Precio</label>\r\n                  <input v-model.number=\"price\" id=\"preci\" type=\"number\" class=\"form-control\">\r\n                </div>\r\n                \r\n              </div>\r\n              <div class=\"col-lg-6\">\r\n                <div class=\"mb-3\">\r\n                  <label for=\"cantidad\" class=\"form-label\">Cantidad</label>\r\n                  <input v-model.number=\"cantid\" type=\"number\" id=\"cantidad\" name=\"cantidad\" min=\"1\" max=\"100\" step=\"1\" class=\"form-control\">\r\n                </div>\r\n                <div class=\"mb-3\">\r\n                  <label for=\"categ\" class=\"form-label\">Categoría</label>\r\n                  <select v-model=\"category\" id=\"categ\" class=\"form-select\" aria-label=\"Default select example\">\r\n                    <option v-for=\"cat in datoscat\" :key=\"cat.IDCatProd\">{{ cat.NombreCategoria }}</option>\r\n                  </select>\r\n                </div>\r\n                <div class=\"form-check\">\r\n                  <input v-model=\"Factura\" class=\"form-check-input\" type=\"radio\" name=\"flexRadioDefault\" id=\"flexRadioDefault1\" value=\"Factura\">\r\n                  <label class=\"form-check-label\" for=\"flexRadioDefault1\">Factura</label>\r\n                </div>\r\n                <div class=\"form-check\">\r\n                  <input v-model=\"Factura\" class=\"form-check-input\" type=\"radio\" name=\"flexRadioDefault\" id=\"flexRadioDefault2\" checked value=\"noFactura\">\r\n                  <label class=\"form-check-label\" for=\"flexRadioDefault2\">No Factura</label>\r\n                </div>\r\n                <div class=\"mb-3\">\r\n                  <label for=\"Textarea1\" class=\"form-label\">Descripción</label>\r\n                  <textarea v-model=\"description\" class=\"form-control\" id=\"Textarea1\" rows=\"3\"></textarea>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"text-center mt-4\">\r\n              <button @click=\"createProduct\" class=\"btn btn-primary\">Crear producto</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n\r\n//se esta utilisando option api \r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  name: 'AddProductForm',\r\n  data() {\r\n    return {\r\n      productName: '',\r\n      cantVent:'',\r\n      unitCost: null,\r\n      cantid: 1,\r\n      price: null,\r\n      category: '',\r\n      description: '',\r\n      selectedFile: null,\r\n      Factura: '',\r\n      datoscant: [],\r\n      datoscat: [],\r\n    };\r\n  },\r\n  mounted() {\r\n    this.Cantidades();\r\n    this.Categorias();\r\n  },\r\n  methods: {\r\n    async Cantidades() {\r\n      try {\r\n        const response = await axios.get('http://localhost:3000/cantidadproducDos');\r\n        this.datoscant = response.data.results; \r\n      } catch (error) {\r\n        console.error('Error al obtener las cantidades:', error);\r\n        alert('Error al obtener las cantidades');\r\n      }\r\n    },\r\n\r\n    async Categorias() {\r\n      try {\r\n        const response = await axios.get('http://localhost:3000/categoriaproducto');\r\n        this.datoscat = response.data.results; \r\n      } catch (error) {\r\n        console.error('Error al obtener las categorias:', error);\r\n        alert('Error al obtener las categorias');\r\n      }\r\n    },\r\n\r\n    onFileChange(event) {\r\n      this.selectedFile = event.target.files[0];\r\n    },\r\n    async createProduct() {\r\n      const formData = {\r\n        selectedFile:this.selectedFile,\r\n        productName:this.productName,\r\n        cantVent :this.cantVent,\r\n        unitCost:this.unitCost,\r\n        price:this.price,\r\n        cantid:this.cantid,\r\n        category:this.category,\r\n        Factura:this.Factura,\r\n        description:this.description,\r\n\r\n      };\r\n      try {\r\n            const response = await axios.post('http://localhost:3000/productos', formData);\r\n            console.log('Respuesta del servidor:', response.data); \r\n            alert('Cantidad creada con éxito');\r\n            // como borrar los datos this.CantidadProduc = \"\"\r\n            this.productName = \"\",\r\n            this.cantVent = \"\",\r\n            this.unitCost = \"\",\r\n            this.price = \"\",\r\n            this.cantid = \"\",\r\n            this.category = \"\",\r\n            this.Factura = \"\",\r\n            this.description = \"\"\r\n        } catch (error) {\r\n            console.error('Error al crear el producto:', error);\r\n            alert('Error al crear la cantidad: ' + error.message);\r\n        }  \r\n    }\r\n  }\r\n}\r\n</script>\r\n<style scoped>\r\n.contenid {\r\n  padding-left: 40px;\r\n  padding-right: 60px;\r\n\r\n  border-left: 1px solid black;\r\n\r\n}\r\n\r\n.titul {\r\n  margin-top: 40px;\r\n  border-bottom: 1px solid black;\r\n  margin-bottom: 40px;\r\n}\r\n\r\n.tituldos {\r\n  text-align: center;\r\n  margin-top: 20px;\r\n  margin-bottom: 50px;\r\n  font-size: 30px;\r\n}\r\n\r\nlabel {\r\n  margin-top: 5px;\r\n  margin-bottom: 5px;\r\n}\r\n\r\n.btmcrear {\r\n  text-align: end;\r\n}\r\n\r\n\r\n.perfiles {\r\n  margin-top: 50px;\r\n  margin-left: 10px;\r\n\r\n}\r\n\r\n.config {\r\n  margin-top: 30px;\r\n  margin-bottom: 50px;\r\n\r\n\r\n}\r\n\r\n\r\n\r\n.produc {\r\n  margin-top: 100px;\r\n  margin-bottom: 100px;\r\n}\r\n\r\na {\r\n  text-decoration: none;\r\n  color: black;\r\n  font-size: 18px;\r\n  margin-left: 5px;\r\n  margin-right: 5px;\r\n}\r\n\r\ni {\r\n  margin-left: 10px;\r\n}\r\n\r\nh5 {\r\n  margin-left: 5px;\r\n}\r\n\r\n.gest a {\r\n  margin-left: 20px;\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}