{"ast":null,"code":"import axios from 'axios';\nexport default {\n  name: 'AbrirCaja',\n  data() {\n    return {\n      montoInicial: '',\n      fechaHora: ''\n    };\n  },\n  mounted() {\n    this.fechaHora = new Date().toISOString().slice(0, 16);\n\n    // Verificar si hay una caja abierta para el usuario\n    axios.get('http://localhost:3000/AbrirCaja', {\n      withCredentials: true\n    }).then(response => {\n      const datos = response.data;\n      if (datos.IDAbrirCaja) {\n        // La caja está abierta, puedes manejar esta información como sea necesario\n        console.log(`Caja abierta: ${datos.IDAbrirCaja}`);\n        this.$emit('caja-abierta', datos);\n      }\n    }).catch(error => {\n      console.error('Error al verificar el estado de la caja:', error);\n    });\n  },\n  methods: {\n    async montoInicialCaja() {\n      const formData = {\n        fechaHora: this.fechaHora,\n        montoInicial: this.montoInicial\n      };\n      try {\n        const response = await axios.post('http://localhost:3000/AbrirCaja', formData, {\n          withCredentials: true\n        });\n        console.log('Respuesta del servidor:', response.data);\n        alert('Se abrió caja correctamente');\n        const dataResponse = await axios.get('http://localhost:3000/AbrirCaja', {\n          withCredentials: true\n        });\n        const datos = dataResponse.data;\n        alert(`Última Caja Abierta:\n          Nombre del Encargado: ${datos.NombreUsuario}\n          ID Caja: ${datos.IDAbrirCaja}\n          Fecha: ${datos.Fecha}\n          Monto Inicial: ${datos.MontoInicial}`);\n        this.limpiarDatos();\n        this.$emit('caja-abierta', datos);\n      } catch (error) {\n        console.error('Error al abrir caja:', error);\n        alert('Error al abrir caja: ' + error.message);\n      }\n    },\n    limpiarDatos() {\n      this.montoInicial = '';\n    }\n  }\n};","map":{"version":3,"names":["axios","name","data","montoInicial","fechaHora","mounted","Date","toISOString","slice","get","withCredentials","then","response","datos","IDAbrirCaja","console","log","$emit","catch","error","methods","montoInicialCaja","formData","post","alert","dataResponse","NombreUsuario","Fecha","MontoInicial","limpiarDatos","message"],"sources":["D:\\Vers_Git_Proyecto\\Proyect_Web\\src\\components\\AbrirCaja.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <form @submit.prevent=\"montoInicialCaja\">\r\n      <div class=\"form-group\">\r\n        <label for=\"montoInicial\">Monto Inicial</label>\r\n        <input\r\n          type=\"number\"\r\n          id=\"montoInicial\"\r\n          v-model=\"montoInicial\"\r\n          class=\"form-control\"\r\n          placeholder=\"Ingrese el monto inicial\"\r\n          required\r\n        />\r\n      </div>\r\n      <button type=\"submit\" class=\"btn btn-primary mt-3\">Abrir Caja</button>\r\n    </form>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  name: 'AbrirCaja',\r\n  data() {\r\n    return {\r\n      montoInicial: '',\r\n      fechaHora: '',\r\n    };\r\n  },\r\n \r\n    mounted() {\r\n  this.fechaHora = new Date().toISOString().slice(0, 16);\r\n  \r\n  // Verificar si hay una caja abierta para el usuario\r\n  axios.get('http://localhost:3000/AbrirCaja', { withCredentials: true })\r\n    .then(response => {\r\n      const datos = response.data;\r\n      if (datos.IDAbrirCaja) {\r\n        // La caja está abierta, puedes manejar esta información como sea necesario\r\n        console.log(`Caja abierta: ${datos.IDAbrirCaja}`);\r\n        this.$emit('caja-abierta', datos);\r\n      }\r\n    })\r\n    .catch(error => {\r\n      console.error('Error al verificar el estado de la caja:', error);\r\n    });\r\n\r\n\r\n  },\r\n  methods: {\r\n    async montoInicialCaja() {\r\n      const formData = {\r\n        fechaHora: this.fechaHora,\r\n        montoInicial: this.montoInicial,\r\n      };\r\n\r\n      try {\r\n        const response = await axios.post('http://localhost:3000/AbrirCaja', formData, { withCredentials: true });\r\n        console.log('Respuesta del servidor:', response.data);\r\n        alert('Se abrió caja correctamente');\r\n\r\n        const dataResponse = await axios.get('http://localhost:3000/AbrirCaja', { withCredentials: true });\r\n        const datos = dataResponse.data;\r\n        alert(`Última Caja Abierta:\r\n          Nombre del Encargado: ${datos.NombreUsuario}\r\n          ID Caja: ${datos.IDAbrirCaja}\r\n          Fecha: ${datos.Fecha}\r\n          Monto Inicial: ${datos.MontoInicial}`);\r\n\r\n        this.limpiarDatos();\r\n\r\n        this.$emit('caja-abierta', datos);\r\n      } catch (error) {\r\n        console.error('Error al abrir caja:', error);\r\n        alert('Error al abrir caja: ' + error.message);\r\n      }\r\n    },\r\n    limpiarDatos() {\r\n      this.montoInicial = '';\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.form-group {\r\n  margin-bottom: 15px;\r\n}\r\n\r\n.btn-primary {\r\n  background-color: #007bff;\r\n  border-color: #007bff;\r\n  text-align: end;\r\n}\r\n\r\n.btn-primary:hover {\r\n  background-color: #0056b3;\r\n  border-color: #0056b3;\r\n}\r\n</style>\r\n"],"mappings":"AAoBA,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAI,EAAE,WAAW;EACjBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,YAAY,EAAE,EAAE;MAChBC,SAAS,EAAE;IACb,CAAC;EACH,CAAC;EAECC,OAAOA,CAAA,EAAG;IACZ,IAAI,CAACD,SAAQ,GAAI,IAAIE,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC;;IAEtD;IACAR,KAAK,CAACS,GAAG,CAAC,iCAAiC,EAAE;MAAEC,eAAe,EAAE;IAAK,CAAC,EACnEC,IAAI,CAACC,QAAO,IAAK;MAChB,MAAMC,KAAI,GAAID,QAAQ,CAACV,IAAI;MAC3B,IAAIW,KAAK,CAACC,WAAW,EAAE;QACrB;QACAC,OAAO,CAACC,GAAG,CAAC,iBAAiBH,KAAK,CAACC,WAAW,EAAE,CAAC;QACjD,IAAI,CAACG,KAAK,CAAC,cAAc,EAAEJ,KAAK,CAAC;MACnC;IACF,CAAC,EACAK,KAAK,CAACC,KAAI,IAAK;MACdJ,OAAO,CAACI,KAAK,CAAC,0CAA0C,EAAEA,KAAK,CAAC;IAClE,CAAC,CAAC;EAGJ,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,gBAAgBA,CAAA,EAAG;MACvB,MAAMC,QAAO,GAAI;QACflB,SAAS,EAAE,IAAI,CAACA,SAAS;QACzBD,YAAY,EAAE,IAAI,CAACA;MACrB,CAAC;MAED,IAAI;QACF,MAAMS,QAAO,GAAI,MAAMZ,KAAK,CAACuB,IAAI,CAAC,iCAAiC,EAAED,QAAQ,EAAE;UAAEZ,eAAe,EAAE;QAAK,CAAC,CAAC;QACzGK,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAAEJ,QAAQ,CAACV,IAAI,CAAC;QACrDsB,KAAK,CAAC,6BAA6B,CAAC;QAEpC,MAAMC,YAAW,GAAI,MAAMzB,KAAK,CAACS,GAAG,CAAC,iCAAiC,EAAE;UAAEC,eAAe,EAAE;QAAK,CAAC,CAAC;QAClG,MAAMG,KAAI,GAAIY,YAAY,CAACvB,IAAI;QAC/BsB,KAAK,CAAC;kCACoBX,KAAK,CAACa,aAAa;qBAChCb,KAAK,CAACC,WAAW;mBACnBD,KAAK,CAACc,KAAK;2BACHd,KAAK,CAACe,YAAY,EAAE,CAAC;QAExC,IAAI,CAACC,YAAY,CAAC,CAAC;QAEnB,IAAI,CAACZ,KAAK,CAAC,cAAc,EAAEJ,KAAK,CAAC;MACnC,EAAE,OAAOM,KAAK,EAAE;QACdJ,OAAO,CAACI,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;QAC5CK,KAAK,CAAC,uBAAsB,GAAIL,KAAK,CAACW,OAAO,CAAC;MAChD;IACF,CAAC;IACDD,YAAYA,CAAA,EAAG;MACb,IAAI,CAAC1B,YAAW,GAAI,EAAE;IACxB;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}