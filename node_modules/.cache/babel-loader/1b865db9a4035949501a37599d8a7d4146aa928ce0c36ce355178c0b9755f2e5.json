{"ast":null,"code":"import axios from 'axios';\nexport default {\n  name: 'AbrirCaja',\n  data() {\n    return {\n      montoInicial: '',\n      fechaHora: '',\n      cajaEstado: 'Cerrada' // Estado inicial\n    };\n  },\n  mounted() {\n    this.fechaHora = new Date().toISOString().slice(0, 16);\n    this.obtenerEstadoCaja(); // Verificar el estado de la caja al montar el componente\n  },\n  methods: {\n    async obtenerEstadoCaja() {\n      try {\n        const response = await axios.get('http://localhost:3000/AbrirCaja', {\n          withCredentials: true\n        });\n        const datos = response.data;\n        if (datos && datos.IDAbrirCaja) {\n          this.cajaEstado = datos.Estado; // Actualiza el estado basado en la respuesta\n        }\n      } catch (error) {\n        console.error('Error al verificar el estado de la caja:', error);\n      }\n    },\n    async montoInicialCaja() {\n      const formData = {\n        fechaHora: this.fechaHora,\n        montoInicial: this.montoInicial\n      };\n      try {\n        if (this.cajaEstado === 'Abierta') {\n          alert('La caja ya está abierta. No se puede abrir una nueva caja.');\n          return;\n        }\n        const response = await axios.post('http://localhost:3000/AbrirCaja', formData, {\n          withCredentials: true\n        });\n        console.log('Respuesta del servidor:', response.data);\n        alert('Se abrió caja correctamente');\n\n        // Actualizar el estado de la caja\n        await this.obtenerEstadoCaja(); // Actualiza el estado después de abrir la caja\n        alert(`Última Caja Abierta:\n          Nombre del Encargado: ${response.data.NombreUsuario}\n          ID Caja: ${response.data.IDAbrirCaja}\n          Fecha: ${response.data.Fecha}\n          Monto Inicial: ${response.data.MontoInicial}`);\n        this.limpiarDatos();\n      } catch (error) {\n        console.error('Error al abrir caja:', error);\n        alert('Error al abrir caja: ' + error.message);\n      }\n    },\n    limpiarDatos() {\n      this.montoInicial = '';\n    }\n  }\n};","map":{"version":3,"names":["axios","name","data","montoInicial","fechaHora","cajaEstado","mounted","Date","toISOString","slice","obtenerEstadoCaja","methods","response","get","withCredentials","datos","IDAbrirCaja","Estado","error","console","montoInicialCaja","formData","alert","post","log","NombreUsuario","Fecha","MontoInicial","limpiarDatos","message"],"sources":["D:\\Vers_Git_Proyecto\\Proyect_Web\\src\\components\\AbrirCaja.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <form @submit.prevent=\"montoInicialCaja\">\r\n      <div class=\"form-group\">\r\n        <label for=\"montoInicial\">Monto Inicial</label>\r\n        <input\r\n          type=\"number\"\r\n          id=\"montoInicial\"\r\n          v-model=\"montoInicial\"\r\n          class=\"form-control\"\r\n          placeholder=\"Ingrese el monto inicial\"\r\n          required\r\n        />\r\n      </div>\r\n      <button \r\n        type=\"submit\" \r\n        class=\"btn btn-primary mt-3\" \r\n        :disabled=\"cajaEstado === 'Abierta'\">\r\n        Abrir Caja\r\n      </button>\r\n      <p v-if=\"cajaEstado === 'Abierta'\" class=\"mt-3 text-warning\">La caja ya está abierta.</p>\r\n    </form>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  name: 'AbrirCaja',\r\n  data() {\r\n    return {\r\n      montoInicial: '',\r\n      fechaHora: '',\r\n      cajaEstado: 'Cerrada' // Estado inicial\r\n    };\r\n  },\r\n\r\n  mounted() {\r\n    this.fechaHora = new Date().toISOString().slice(0, 16);\r\n    this.obtenerEstadoCaja(); // Verificar el estado de la caja al montar el componente\r\n  },\r\n\r\n  methods: {\r\n    async obtenerEstadoCaja() {\r\n      try {\r\n        const response = await axios.get('http://localhost:3000/AbrirCaja', { withCredentials: true });\r\n        const datos = response.data;\r\n        if (datos && datos.IDAbrirCaja) {\r\n          this.cajaEstado = datos.Estado; // Actualiza el estado basado en la respuesta\r\n        }\r\n      } catch (error) {\r\n        console.error('Error al verificar el estado de la caja:', error);\r\n      }\r\n    },\r\n\r\n    async montoInicialCaja() {\r\n      const formData = {\r\n        fechaHora: this.fechaHora,\r\n        montoInicial: this.montoInicial\r\n      };\r\n\r\n      try {\r\n        if (this.cajaEstado === 'Abierta') {\r\n          alert('La caja ya está abierta. No se puede abrir una nueva caja.');\r\n          return;\r\n        }\r\n\r\n        const response = await axios.post('http://localhost:3000/AbrirCaja', formData, { withCredentials: true });\r\n        console.log('Respuesta del servidor:', response.data);\r\n        alert('Se abrió caja correctamente');\r\n\r\n        // Actualizar el estado de la caja\r\n        await this.obtenerEstadoCaja(); // Actualiza el estado después de abrir la caja\r\n        alert(`Última Caja Abierta:\r\n          Nombre del Encargado: ${response.data.NombreUsuario}\r\n          ID Caja: ${response.data.IDAbrirCaja}\r\n          Fecha: ${response.data.Fecha}\r\n          Monto Inicial: ${response.data.MontoInicial}`);\r\n\r\n        this.limpiarDatos();\r\n      } catch (error) {\r\n        console.error('Error al abrir caja:', error);\r\n        alert('Error al abrir caja: ' + error.message);\r\n      }\r\n    },\r\n\r\n    limpiarDatos() {\r\n      this.montoInicial = '';\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n\r\n<style scoped>\r\n.form-group {\r\n  margin-bottom: 15px;\r\n}\r\n\r\n.btn-primary {\r\n  background-color: #007bff;\r\n  border-color: #007bff;\r\n  text-align: end;\r\n}\r\n\r\n.btn-primary:hover {\r\n  background-color: #0056b3;\r\n  border-color: #0056b3;\r\n}\r\n</style>\r\n"],"mappings":"AA0BA,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAI,EAAE,WAAW;EACjBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,YAAY,EAAE,EAAE;MAChBC,SAAS,EAAE,EAAE;MACbC,UAAU,EAAE,SAAQ,CAAE;IACxB,CAAC;EACH,CAAC;EAEDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACF,SAAQ,GAAI,IAAIG,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC;IACtD,IAAI,CAACC,iBAAiB,CAAC,CAAC,EAAE;EAC5B,CAAC;EAEDC,OAAO,EAAE;IACP,MAAMD,iBAAiBA,CAAA,EAAG;MACxB,IAAI;QACF,MAAME,QAAO,GAAI,MAAMZ,KAAK,CAACa,GAAG,CAAC,iCAAiC,EAAE;UAAEC,eAAe,EAAE;QAAK,CAAC,CAAC;QAC9F,MAAMC,KAAI,GAAIH,QAAQ,CAACV,IAAI;QAC3B,IAAIa,KAAI,IAAKA,KAAK,CAACC,WAAW,EAAE;UAC9B,IAAI,CAACX,UAAS,GAAIU,KAAK,CAACE,MAAM,EAAE;QAClC;MACF,EAAE,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,0CAA0C,EAAEA,KAAK,CAAC;MAClE;IACF,CAAC;IAED,MAAME,gBAAgBA,CAAA,EAAG;MACvB,MAAMC,QAAO,GAAI;QACfjB,SAAS,EAAE,IAAI,CAACA,SAAS;QACzBD,YAAY,EAAE,IAAI,CAACA;MACrB,CAAC;MAED,IAAI;QACF,IAAI,IAAI,CAACE,UAAS,KAAM,SAAS,EAAE;UACjCiB,KAAK,CAAC,4DAA4D,CAAC;UACnE;QACF;QAEA,MAAMV,QAAO,GAAI,MAAMZ,KAAK,CAACuB,IAAI,CAAC,iCAAiC,EAAEF,QAAQ,EAAE;UAAEP,eAAe,EAAE;QAAK,CAAC,CAAC;QACzGK,OAAO,CAACK,GAAG,CAAC,yBAAyB,EAAEZ,QAAQ,CAACV,IAAI,CAAC;QACrDoB,KAAK,CAAC,6BAA6B,CAAC;;QAEpC;QACA,MAAM,IAAI,CAACZ,iBAAiB,CAAC,CAAC,EAAE;QAChCY,KAAK,CAAC;kCACoBV,QAAQ,CAACV,IAAI,CAACuB,aAAa;qBACxCb,QAAQ,CAACV,IAAI,CAACc,WAAW;mBAC3BJ,QAAQ,CAACV,IAAI,CAACwB,KAAK;2BACXd,QAAQ,CAACV,IAAI,CAACyB,YAAY,EAAE,CAAC;QAEhD,IAAI,CAACC,YAAY,CAAC,CAAC;MACrB,EAAE,OAAOV,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;QAC5CI,KAAK,CAAC,uBAAsB,GAAIJ,KAAK,CAACW,OAAO,CAAC;MAChD;IACF,CAAC;IAEDD,YAAYA,CAAA,EAAG;MACb,IAAI,CAACzB,YAAW,GAAI,EAAE;IACxB;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}