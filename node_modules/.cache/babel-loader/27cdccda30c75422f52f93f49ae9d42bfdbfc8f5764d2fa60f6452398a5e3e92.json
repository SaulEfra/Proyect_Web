{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport Swal from 'sweetalert2';\nimport axios from 'axios';\nexport default {\n  name: 'ProvedoreProd',\n  data() {\n    return {\n      datosempl: [],\n      mostrarFormulario: false,\n      clientes: [],\n      nuevoCliente: {\n        IDProveedor: null,\n        Nombre: '',\n        Telefono: '',\n        Adeudo: 0,\n        activo: true\n      },\n      modoEdicion: false,\n      busqueda: '',\n      clienteSeleccionado: null,\n      modalTitulo: '',\n      cantidadAdeudoAbono: 0,\n      esAdeudo: true,\n      mostrarModal: false\n    };\n  },\n  computed: {\n    clientesFiltrados() {\n      if (this.busqueda) {\n        return this.clientes.filter(cliente => cliente.NombreCli.toLowerCase().includes(this.busqueda.toLowerCase()));\n      }\n      return this.clientes;\n    }\n  },\n  methods: {\n    async agregarCliente() {\n      const swalWithBootstrapButtons = Swal.mixin({\n        customClass: {\n          confirmButton: \"btn btn-success\",\n          cancelButton: \"btn btn-danger\"\n        },\n        buttonsStyling: false\n      });\n      if (this.modoEdicion) {\n        swalWithBootstrapButtons.fire({\n          title: \"¿Actualizar cliente?\",\n          text: \"¿Está seguro de que desea actualizar este cliente?\",\n          icon: \"question\",\n          showCancelButton: true,\n          confirmButtonText: \"Sí, actualizar\",\n          cancelButtonText: \"Cancelar\",\n          reverseButtons: true\n        }).then(async result => {\n          if (result.isConfirmed) {\n            const index = this.clientes.findIndex(cli => cli.id === this.nuevoCliente.IDCli);\n            await axios.put('http://localhost:3000/Neg/provedoresAct', {\n              IDCli: this.nuevoCliente.IDCli,\n              Nombrecli: this.nuevoCliente.Nombre,\n              NumeroDeTelefonocli: this.nuevoCliente.Telefono,\n              Adeudo: this.nuevoCliente.Adeudo,\n              activocli: this.nuevoCliente.activo\n            });\n            this.resetearFormulario();\n            this.obtenerClientes();\n            if (index !== -1) {\n              this.datosempl[index] = {\n                ...this.nuevoCliente\n              };\n              this.resetearFormulario();\n              Swal.fire({\n                title: \"Cliente actualizado\",\n                icon: \"success\"\n              });\n            }\n          }\n        });\n      } else {\n        const nuevoId = Date.now().toString();\n        this.clientes.push({\n          ...this.nuevoCliente,\n          id: nuevoId\n        });\n        await axios.post('http://localhost:3000/Neg/provedores', {\n          IDcliente: this.nuevoCliente.IDEmpleado,\n          Nombreprov: this.nuevoCliente.NombreCli,\n          NumeroDeTelefono: this.nuevoCliente.Telefono,\n          Adeudo: this.nuevoCliente.Adeudo,\n          activocli: this.nuevoCliente.activo\n        });\n        this.resetearFormulario();\n        this.obtenerClientes();\n        Swal.fire({\n          title: \"Cliente añadido\",\n          icon: \"success\"\n        });\n      }\n    },\n    editarCliente(cliente) {\n      this.nuevoCliente = {\n        ...cliente\n      };\n      this.modoEdicion = true;\n      this.mostrarFormulario = true;\n    },\n    async borrarCliente(IDProveedor) {\n      const swalWithBootstrapButtons = Swal.mixin({\n        customClass: {\n          confirmButton: \"btn btn-success\",\n          cancelButton: \"btn btn-danger\"\n        },\n        buttonsStyling: false\n      });\n      swalWithBootstrapButtons.fire({\n        title: \"¿Está seguro?\",\n        text: \"No podrá revertir esta acción!\",\n        icon: \"warning\",\n        showCancelButton: true,\n        confirmButtonText: \"Sí, eliminar!\",\n        cancelButtonText: \"No, cancelar!\",\n        reverseButtons: true\n      }).then(async result => {\n        if (result.isConfirmed) {\n          //this.clientes = this.clientes.filter(cli => cli.IDCli !== IDCli)\n          try {\n            this.datosempl = this.datosempl.filter(emp => emp.IDProveedor !== IDProveedor);\n            await axios.delete(`http://localhost:3000/Neg/Clientes/${IDProveedor}`);\n          } catch (error) {\n            console.error(\"Error al eliminar el empleado:\", error);\n          }\n          this.obtenerClientes();\n          swalWithBootstrapButtons.fire({\n            title: \"Eliminado!\",\n            text: \"El cliente ha sido eliminado.\",\n            icon: \"success\"\n          });\n        }\n      });\n    },\n    resetearFormulario() {\n      this.nuevoCliente = {\n        IDCli: null,\n        // Inicializar IDCli aquí también\n        NombreCli: '',\n        Telefono: '',\n        Adeudo: 0,\n        activo: true // Asegúrate de inicializar todas las propiedades necesarias\n      };\n      this.mostrarFormulario = false;\n      this.modoEdicion = false;\n    },\n    cancelarEdicion() {\n      this.resetearFormulario();\n    },\n    validarTelefono(event) {\n      this.nuevoCliente.Telefono = event.target.value.replace(/[^0-9]/g, '');\n    },\n    buscarCliente() {\n      // La búsqueda se realiza automáticamente gracias al computed property\n    },\n    mostrarModalAdeudo(cliente) {\n      this.clienteSeleccionado = cliente;\n      this.modalTitulo = 'Añadir Adeudo';\n      this.esAdeudo = true;\n      this.cantidadAdeudoAbono = 0;\n      this.mostrarModal = true;\n    },\n    mostrarModalAbono(cliente) {\n      this.clienteSeleccionado = cliente;\n      this.modalTitulo = 'Añadir Abono';\n      this.esAdeudo = false;\n      this.cantidadAdeudoAbono = 0;\n      this.mostrarModal = true;\n    },\n    procesarAdeudoAbono() {\n      if (this.clienteSeleccionado) {\n        if (this.esAdeudo) {\n          this.clienteSeleccionado.Adeudo += this.cantidadAdeudoAbono;\n        } else {\n          if (this.cantidadAdeudoAbono > this.clienteSeleccionado.Adeudo) {\n            Swal.fire({\n              title: \"Error\",\n              text: \"El abono no puede ser mayor que el adeudo actual.\",\n              icon: \"error\"\n            });\n            return;\n          }\n          this.clienteSeleccionado.Adeudo -= this.cantidadAdeudoAbono;\n        }\n        this.actualizarCliente(this.clienteSeleccionado);\n        this.cerrarModal();\n        Swal.fire({\n          title: this.esAdeudo ? \"Adeudo añadido\" : \"Abono realizado\",\n          icon: \"success\"\n        });\n      }\n    },\n    actualizarCliente(cliente) {\n      const index = this.clientes.findIndex(c => c.id === cliente.id);\n      if (index !== -1) {\n        this.$set(this.clientes, index, {\n          ...cliente\n        });\n      }\n    },\n    cerrarModal() {\n      this.mostrarModal = false;\n    },\n    async obtenerClientes() {\n      try {\n        const response = await axios.get('http://localhost:3000/Neg/provedoresget');\n        this.datosempl = response.data.results;\n        this.clientes = response.data.results;\n      } catch (error) {\n        console.error('Error al obtener los provedores:', error);\n        alert('Error al obtener los provedores');\n      }\n    }\n  },\n  mounted() {\n    this.obtenerClientes();\n  }\n};","map":{"version":3,"names":["Swal","axios","name","data","datosempl","mostrarFormulario","clientes","nuevoCliente","IDProveedor","Nombre","Telefono","Adeudo","activo","modoEdicion","busqueda","clienteSeleccionado","modalTitulo","cantidadAdeudoAbono","esAdeudo","mostrarModal","computed","clientesFiltrados","filter","cliente","NombreCli","toLowerCase","includes","methods","agregarCliente","swalWithBootstrapButtons","mixin","customClass","confirmButton","cancelButton","buttonsStyling","fire","title","text","icon","showCancelButton","confirmButtonText","cancelButtonText","reverseButtons","then","result","isConfirmed","index","findIndex","cli","id","IDCli","put","Nombrecli","NumeroDeTelefonocli","activocli","resetearFormulario","obtenerClientes","nuevoId","Date","now","toString","push","post","IDcliente","IDEmpleado","Nombreprov","NumeroDeTelefono","editarCliente","borrarCliente","emp","delete","error","console","cancelarEdicion","validarTelefono","event","target","value","replace","buscarCliente","mostrarModalAdeudo","mostrarModalAbono","procesarAdeudoAbono","actualizarCliente","cerrarModal","c","$set","response","get","results","alert","mounted"],"sources":["C:\\Users\\Kenny\\Downloads\\Proyect\\Proyect_Web\\src\\components\\ProvedoreProd.vue"],"sourcesContent":["<template>\r\n    <nav class=\"navbar bg-body-tertiary\">\r\n      <div class=\"container-fluid\">\r\n        <span class=\"navbar-brand\">\r\n          <h1>Proveedores</h1>\r\n        </span>\r\n        <form class=\"d-flex\" @submit.prevent=\"buscarCliente\">\r\n          <input class=\"form-control me-2\" type=\"search\" v-model=\"busqueda\" placeholder=\"Buscar cliente\" aria-label=\"Search\">\r\n          <button class=\"btn btn-outline-success\" type=\"submit\">Buscar</button>\r\n        </form>\r\n        <button v-if=\"!mostrarFormulario\" @click=\"mostrarFormulario = true\" class=\"btn btn-primary\">Añadir Proveedor</button>\r\n      </div>\r\n    </nav>\r\n    <div class=\"row mt-4\">\r\n      <div>\r\n        <table v-if=\"!mostrarFormulario\" class=\"table table-striped\">\r\n          <thead>\r\n            <tr>\r\n              <th scope=\"col\">Nombre del Proveedor</th>\r\n              <th scope=\"col\">Teléfono</th>\r\n              <th scope=\"col\">Adeudos</th>\r\n              <th scope=\"col\">Acciones</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody class=\"table-group-divider\">\r\n            <tr v-for=\"(cliente, indice) in clientesFiltrados\" :key=\"indice\">\r\n              <td class=\"d-none\">{{ cliente.IDProveedor }}</td>\r\n              <td>{{ cliente.Nombre }}</td>\r\n              <td>{{ cliente.Telefono }}</td>\r\n              <td>{{ cliente.Adeudo }}</td>\r\n              <td>\r\n                <div class=\"btn-group\" role=\"group\">\r\n                  <button class=\"btn btn-secondary\" title=\"Editar\" @click=\"editarCliente(cliente)\">\r\n                    <i class=\"bi bi-pencil-square\"></i> Editar\r\n                  </button>\r\n                  <button class=\"btn btn-danger\" title=\"Eliminar\" @click=\"borrarCliente(cliente.IDProveedor)\">\r\n                    <i class=\"bi bi-trash\"></i> Eliminar\r\n                  </button>\r\n                  <button class=\"btn btn-info\" title=\"Añadir Adeudo\" @click=\"mostrarModalAdeudo(cliente)\">\r\n                    <i class=\"bi bi-plus-circle\"></i> Adeudo\r\n                  </button>\r\n                  <button class=\"btn btn-success\" title=\"Añadir Abono\" @click=\"mostrarModalAbono(cliente)\">\r\n                    <i class=\"bi bi-dash-circle\"></i> Abono\r\n                  </button>\r\n                </div>\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n        <form v-if=\"mostrarFormulario\" @submit.prevent=\"agregarCliente\">\r\n          <table class=\"table\">\r\n            <thead>\r\n              <tr>\r\n                <th scope=\"col\">Nombre del cliente</th>\r\n                <th scope=\"col\">Teléfono</th>\r\n                <th scope=\"col\">Adeudos</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody class=\"table-group-divider\">\r\n              <tr>\r\n                <td><input v-model=\"nuevoCliente.Nombre\" type=\"text\" required class=\"form-control\"></td>\r\n                <td>\r\n                  <input v-model=\"nuevoCliente.Telefono\" type=\"text\" required class=\"form-control\" @input=\"validarTelefono\" pattern=\"\\d{10}\">\r\n                </td>\r\n                <td>\r\n                  <input v-model.number=\"nuevoCliente.Adeudo\" min=\"1\" type=\"number\" required class=\"form-control\" step=\"0.01\">\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n          <button type=\"submit\" class=\"btn btn-primary\">{{ modoEdicion ? 'Actualizar' : 'Añadir' }} Cliente</button>\r\n          <button @click=\"cancelarEdicion\" type=\"button\" class=\"btn btn-secondary ml-2\">Cancelar</button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  \r\n    <!-- Modal para Adeudos y Abonos -->\r\n    <div v-if=\"mostrarModal\" class=\"modal-backdrop fade show\"></div>\r\n    <div v-if=\"mostrarModal\" class=\"modal fade show\" tabindex=\"-1\" style=\"display: block;\">\r\n      <div class=\"modal-dialog\">\r\n        <div class=\"modal-content\">\r\n          <div class=\"modal-header\">\r\n            <h5 class=\"modal-title\">{{ modalTitulo }}</h5>\r\n            <button type=\"button\" class=\"btn-close\" @click=\"cerrarModal\"></button>\r\n          </div>\r\n          <div class=\"modal-body\">\r\n            <form @submit.prevent=\"procesarAdeudoAbono\">\r\n              <div class=\"mb-3\">\r\n                <label for=\"cantidad\" class=\"form-label\">Cantidad</label>\r\n                <input type=\"number\" class=\"form-control\" id=\"cantidad\" v-model.number=\"cantidadAdeudoAbono\" step=\"0.01\" required>\r\n              </div>\r\n              <button type=\"submit\" class=\"btn btn-primary\">Confirmar</button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import Swal from 'sweetalert2'\r\n  import axios from 'axios'\r\n  \r\n  export default {\r\n    name: 'ProvedoreProd',\r\n    data() {\r\n      return {\r\n        datosempl: [],\r\n        mostrarFormulario: false,\r\n        clientes: [],\r\n        nuevoCliente: {\r\n          IDProveedor: null,\r\n          Nombre: '',\r\n          Telefono: '',\r\n          Adeudo: 0,\r\n          activo: true \r\n        },\r\n        modoEdicion: false,\r\n        busqueda: '',\r\n        clienteSeleccionado: null,\r\n        modalTitulo: '',\r\n        cantidadAdeudoAbono: 0,\r\n        esAdeudo: true,\r\n        mostrarModal: false\r\n      }\r\n    },\r\n    computed: {\r\n      clientesFiltrados() {\r\n        if (this.busqueda) {\r\n          return this.clientes.filter(cliente => cliente.NombreCli.toLowerCase().includes(this.busqueda.toLowerCase()))\r\n        }\r\n        return this.clientes\r\n      }\r\n    },\r\n    methods: {\r\n      async agregarCliente() {\r\n        const swalWithBootstrapButtons = Swal.mixin({\r\n          customClass: {\r\n            confirmButton: \"btn btn-success\",\r\n            cancelButton: \"btn btn-danger\"\r\n          },\r\n          buttonsStyling: false\r\n        });\r\n  \r\n        if (this.modoEdicion) {\r\n          swalWithBootstrapButtons.fire({\r\n            title: \"¿Actualizar cliente?\",\r\n            text: \"¿Está seguro de que desea actualizar este cliente?\",\r\n            icon: \"question\",\r\n            showCancelButton: true,\r\n            confirmButtonText: \"Sí, actualizar\",\r\n            cancelButtonText: \"Cancelar\",\r\n            reverseButtons: true\r\n          }).then(async (result) => { \r\n            if (result.isConfirmed) {\r\n              const index = this.clientes.findIndex(cli => cli.id === this.nuevoCliente.IDCli)\r\n              await axios.put('http://localhost:3000/Neg/provedoresAct', {\r\n                  IDCli: this.nuevoCliente.IDCli, \r\n                  Nombrecli: this.nuevoCliente.Nombre,\r\n                  NumeroDeTelefonocli: this.nuevoCliente.Telefono,\r\n                  Adeudo: this.nuevoCliente.Adeudo,\r\n                  activocli: this.nuevoCliente.activo\r\n                })\r\n              this.resetearFormulario()\r\n              this.obtenerClientes()\r\n              if (index !== -1) {\r\n                this.datosempl[index] = { ...this.nuevoCliente };\r\n                this.resetearFormulario()\r\n                Swal.fire({\r\n                  title: \"Cliente actualizado\",\r\n                  icon: \"success\",\r\n                });\r\n              }\r\n            }\r\n          });\r\n        } else {\r\n          const nuevoId = Date.now().toString()\r\n          this.clientes.push({ ...this.nuevoCliente, id: nuevoId })\r\n          await axios.post('http://localhost:3000/Neg/provedores', {\r\n                  IDcliente: this.nuevoCliente.IDEmpleado, \r\n                  Nombreprov: this.nuevoCliente.NombreCli,\r\n                  NumeroDeTelefono: this.nuevoCliente.Telefono,\r\n                  Adeudo: this.nuevoCliente.Adeudo,\r\n                  activocli: this.nuevoCliente.activo\r\n                })\r\n          this.resetearFormulario()\r\n          this.obtenerClientes()\r\n          Swal.fire({\r\n            title: \"Cliente añadido\",\r\n            icon: \"success\",\r\n          });\r\n        }\r\n      },\r\n      editarCliente(cliente) {\r\n        this.nuevoCliente = { ...cliente }\r\n        this.modoEdicion = true\r\n        this.mostrarFormulario = true\r\n      },\r\n      async borrarCliente(IDProveedor) {\r\n        const swalWithBootstrapButtons = Swal.mixin({\r\n          customClass: {\r\n            confirmButton: \"btn btn-success\",\r\n            cancelButton: \"btn btn-danger\"\r\n          },\r\n          buttonsStyling: false\r\n        });\r\n  \r\n        swalWithBootstrapButtons.fire({\r\n          title: \"¿Está seguro?\",\r\n          text: \"No podrá revertir esta acción!\",\r\n          icon: \"warning\",\r\n          showCancelButton: true,\r\n          confirmButtonText: \"Sí, eliminar!\",\r\n          cancelButtonText: \"No, cancelar!\",\r\n          reverseButtons: true\r\n        }).then(async(result) => {\r\n          if (result.isConfirmed) {\r\n            //this.clientes = this.clientes.filter(cli => cli.IDCli !== IDCli)\r\n            try {\r\n              this.datosempl = this.datosempl.filter(emp => emp.IDProveedor !== IDProveedor);\r\n              await axios.delete(`http://localhost:3000/Neg/Clientes/${IDProveedor}`);\r\n            } catch (error) {\r\n              console.error(\"Error al eliminar el empleado:\", error);\r\n            }\r\n            this.obtenerClientes()\r\n            swalWithBootstrapButtons.fire({\r\n              title: \"Eliminado!\",\r\n              text: \"El cliente ha sido eliminado.\",\r\n              icon: \"success\"\r\n            });\r\n          }\r\n        });\r\n      },\r\n      resetearFormulario() {\r\n        this.nuevoCliente = {\r\n          IDCli: null, // Inicializar IDCli aquí también\r\n          NombreCli: '',\r\n          Telefono: '',\r\n          Adeudo: 0,\r\n          activo: true // Asegúrate de inicializar todas las propiedades necesarias\r\n        }\r\n        this.mostrarFormulario = false\r\n        this.modoEdicion = false\r\n      },\r\n      cancelarEdicion() {\r\n        this.resetearFormulario()\r\n      },\r\n      validarTelefono(event) {\r\n        this.nuevoCliente.Telefono = event.target.value.replace(/[^0-9]/g, '')\r\n      },\r\n      buscarCliente() {\r\n        // La búsqueda se realiza automáticamente gracias al computed property\r\n      },\r\n      mostrarModalAdeudo(cliente) {\r\n        this.clienteSeleccionado = cliente\r\n        this.modalTitulo = 'Añadir Adeudo'\r\n        this.esAdeudo = true\r\n        this.cantidadAdeudoAbono = 0\r\n        this.mostrarModal = true\r\n      },\r\n      mostrarModalAbono(cliente) {\r\n        this.clienteSeleccionado = cliente\r\n        this.modalTitulo = 'Añadir Abono'\r\n        this.esAdeudo = false\r\n        this.cantidadAdeudoAbono = 0\r\n        this.mostrarModal = true\r\n      },\r\n      procesarAdeudoAbono() {\r\n        if (this.clienteSeleccionado) {\r\n          if (this.esAdeudo) {\r\n            this.clienteSeleccionado.Adeudo += this.cantidadAdeudoAbono\r\n          } else {\r\n            if (this.cantidadAdeudoAbono > this.clienteSeleccionado.Adeudo) {\r\n              Swal.fire({\r\n                title: \"Error\",\r\n                text: \"El abono no puede ser mayor que el adeudo actual.\",\r\n                icon: \"error\",\r\n              });\r\n              return\r\n            }\r\n            this.clienteSeleccionado.Adeudo -= this.cantidadAdeudoAbono\r\n          }\r\n          this.actualizarCliente(this.clienteSeleccionado)\r\n          this.cerrarModal()\r\n          Swal.fire({\r\n            title: this.esAdeudo ? \"Adeudo añadido\" : \"Abono realizado\",\r\n            icon: \"success\",\r\n          });\r\n        }\r\n      },\r\n      actualizarCliente(cliente) {\r\n        const index = this.clientes.findIndex(c => c.id === cliente.id)\r\n        if (index !== -1) {\r\n          this.$set(this.clientes, index, { ...cliente })\r\n        }\r\n      },\r\n      cerrarModal() {\r\n        this.mostrarModal = false\r\n      },\r\n      async obtenerClientes() {\r\n        try {\r\n          const response = await axios.get('http://localhost:3000/Neg/provedoresget');\r\n          this.datosempl = response.data.results;\r\n          this.clientes = response.data.results;\r\n        } catch (error) {\r\n          console.error('Error al obtener los provedores:', error);\r\n          alert('Error al obtener los provedores');\r\n        }\r\n      }\r\n    },\r\n    mounted() {\r\n      this.obtenerClientes()\r\n    }\r\n  }\r\n  </script>\r\n  "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}