{"ast":null,"code":"import axios from 'axios';\nexport default {\n  name: 'AbrirCaja',\n  data() {\n    return {\n      montoInicial: '',\n      fechaHora: '',\n      IDAbrirCaja: ''\n    };\n  },\n  mounted() {\n    this.fechaHora = new Date().toISOString().slice(0, 16);\n    this.IDAbrirCaja = {\n      $datos: IDAbrirCaja\n    };\n  },\n  methods: {\n    async montoInicialCaja() {\n      const formData = {\n        montoInicial: this.montoInicial,\n        fechaHora: this.fechaHora\n      };\n      try {\n        const response = await axios.post('http://localhost:3000/AbrirCaja', formData);\n        console.log('Respuesta del servidor:', response.data);\n        alert('Se Abrió Caja Correctamente');\n\n        // Obtener los datos del último registro\n        const dataResponse = await axios.get('http://localhost:3000/AbrirCaja');\n        const datos = dataResponse.data;\n        alert(`Última Caja Abierta:\n          ID Encargado: ${datos.IDUser}\n          ID Caja: ${datos.IDAbrirCaja}\n          Fecha: ${datos.Fecha}\n          Monto Inicial: ${datos.MontoInicial}`);\n        const datosCaja = {\n          IDAbrirCaja: this.IDAbrirCaja\n        };\n        const IDAbrirCaja = await axios.post('http://localhost:3000/Caja', datosCaja);\n        console.log('Respuesta del servidor:', IDAbrirCaja.data);\n        alert('Se Abrió Caja Correctamente');\n        this.limpiarDatos(); // Limpiar datos\n\n        // Emitir un evento con los datos obtenidos\n        this.$emit('caja-abierta', datos);\n      } catch (error) {\n        console.error('Error al Abrir caja:', error);\n        alert('Error al abrir caja: ' + error.message);\n      }\n    },\n    limpiarDatos() {\n      this.montoInicial = '';\n    }\n  }\n};","map":{"version":3,"names":["axios","name","data","montoInicial","fechaHora","IDAbrirCaja","mounted","Date","toISOString","slice","$datos","methods","montoInicialCaja","formData","response","post","console","log","alert","dataResponse","get","datos","IDUser","Fecha","MontoInicial","datosCaja","limpiarDatos","$emit","error","message"],"sources":["D:\\Vers_Git_Proyecto\\Proyect_Web\\src\\components\\AbrirCaja.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <form @submit.prevent=\"montoInicialCaja\">\r\n      <div class=\"form-group\">\r\n        <label for=\"montoInicial\">Monto Inicial</label>\r\n        <input\r\n          type=\"number\"\r\n          id=\"montoInicial\"\r\n          v-model=\"montoInicial\"\r\n          class=\"form-control\"\r\n          placeholder=\"Ingrese el monto inicial\"\r\n          required\r\n        />\r\n      </div>\r\n    \r\n      <button type=\"submit\" class=\"btn btn-primary mt-3\">Abrir Caja</button>\r\n    </form>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  name: 'AbrirCaja',\r\n  data() {\r\n    return {\r\n      montoInicial: '',\r\n      fechaHora: '',\r\n      IDAbrirCaja: '',\r\n    };\r\n  },\r\n  mounted() {\r\n    this.fechaHora = new Date().toISOString().slice(0, 16);\r\n    this.IDAbrirCaja = {$datos:IDAbrirCaja}\r\n  },\r\n  methods: {\r\n    async montoInicialCaja() {\r\n      const formData = {\r\n        montoInicial: this.montoInicial,\r\n        fechaHora: this.fechaHora,\r\n      };\r\n      try {\r\n        const response = await axios.post('http://localhost:3000/AbrirCaja', formData);\r\n        console.log('Respuesta del servidor:', response.data); \r\n        alert('Se Abrió Caja Correctamente');\r\n\r\n        // Obtener los datos del último registro\r\n        const dataResponse = await axios.get('http://localhost:3000/AbrirCaja');\r\n        const datos = dataResponse.data;\r\n        alert(`Última Caja Abierta:\r\n          ID Encargado: ${datos.IDUser}\r\n          ID Caja: ${datos.IDAbrirCaja}\r\n          Fecha: ${datos.Fecha}\r\n          Monto Inicial: ${datos.MontoInicial}`);\r\n\r\n          const datosCaja = {\r\n            IDAbrirCaja: this.IDAbrirCaja,\r\n          }\r\n\r\n        const IDAbrirCaja = await axios.post('http://localhost:3000/Caja', datosCaja);\r\n        console.log('Respuesta del servidor:', IDAbrirCaja.data); \r\n        alert('Se Abrió Caja Correctamente');\r\n\r\n\r\n        this.limpiarDatos(); // Limpiar datos\r\n        \r\n        // Emitir un evento con los datos obtenidos\r\n        this.$emit('caja-abierta', datos);\r\n\r\n      } catch (error) {\r\n        console.error('Error al Abrir caja:', error);\r\n        alert('Error al abrir caja: ' + error.message);\r\n      }\r\n    },\r\n    limpiarDatos() {\r\n      this.montoInicial = '';\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.form-group {\r\n  margin-bottom: 15px;\r\n}\r\n\r\n.btn-primary {\r\n  background-color: #007bff;\r\n  border-color: #007bff;\r\n  text-align: end;\r\n}\r\n\r\n.btn-primary:hover {\r\n  background-color: #0056b3;\r\n  border-color: #0056b3;\r\n}\r\n</style>\r\n\r\n\r\n\r\n\r\n"],"mappings":"AAqBA,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAI,EAAE,WAAW;EACjBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,YAAY,EAAE,EAAE;MAChBC,SAAS,EAAE,EAAE;MACbC,WAAW,EAAE;IACf,CAAC;EACH,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACF,SAAQ,GAAI,IAAIG,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC;IACtD,IAAI,CAACJ,WAAU,GAAI;MAACK,MAAM,EAACL;IAAW;EACxC,CAAC;EACDM,OAAO,EAAE;IACP,MAAMC,gBAAgBA,CAAA,EAAG;MACvB,MAAMC,QAAO,GAAI;QACfV,YAAY,EAAE,IAAI,CAACA,YAAY;QAC/BC,SAAS,EAAE,IAAI,CAACA;MAClB,CAAC;MACD,IAAI;QACF,MAAMU,QAAO,GAAI,MAAMd,KAAK,CAACe,IAAI,CAAC,iCAAiC,EAAEF,QAAQ,CAAC;QAC9EG,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAAEH,QAAQ,CAACZ,IAAI,CAAC;QACrDgB,KAAK,CAAC,6BAA6B,CAAC;;QAEpC;QACA,MAAMC,YAAW,GAAI,MAAMnB,KAAK,CAACoB,GAAG,CAAC,iCAAiC,CAAC;QACvE,MAAMC,KAAI,GAAIF,YAAY,CAACjB,IAAI;QAC/BgB,KAAK,CAAC;0BACYG,KAAK,CAACC,MAAM;qBACjBD,KAAK,CAAChB,WAAW;mBACnBgB,KAAK,CAACE,KAAK;2BACHF,KAAK,CAACG,YAAY,EAAE,CAAC;QAEtC,MAAMC,SAAQ,GAAI;UAChBpB,WAAW,EAAE,IAAI,CAACA;QACpB;QAEF,MAAMA,WAAU,GAAI,MAAML,KAAK,CAACe,IAAI,CAAC,4BAA4B,EAAEU,SAAS,CAAC;QAC7ET,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAAEZ,WAAW,CAACH,IAAI,CAAC;QACxDgB,KAAK,CAAC,6BAA6B,CAAC;QAGpC,IAAI,CAACQ,YAAY,CAAC,CAAC,EAAE;;QAErB;QACA,IAAI,CAACC,KAAK,CAAC,cAAc,EAAEN,KAAK,CAAC;MAEnC,EAAE,OAAOO,KAAK,EAAE;QACdZ,OAAO,CAACY,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;QAC5CV,KAAK,CAAC,uBAAsB,GAAIU,KAAK,CAACC,OAAO,CAAC;MAChD;IACF,CAAC;IACDH,YAAYA,CAAA,EAAG;MACb,IAAI,CAACvB,YAAW,GAAI,EAAE;IACxB;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}