{"ast":null,"code":"import axios from 'axios';\nexport default {\n  name: 'CerrarCaja',\n  data() {\n    return {\n      montoFinal: '',\n      fechaHoraCierre: '',\n      ventasTotales: undefined,\n      gastosTotales: undefined,\n      balanceTotal: undefined,\n      datosCajaAbierta: null\n    };\n  },\n  async mounted() {\n    this.fechaHoraCierre = new Date().toISOString().slice(0, 16);\n    await this.obtenerDatosCaja(); // Llamar a la función para obtener los datos al montar el componente\n  },\n  methods: {\n    async obtenerDatosCaja() {\n      try {\n        const response = await axios.get('http://localhost:3000/AbrirCaja', {\n          withCredentials: true\n        });\n        this.datosCajaAbierta = response.data;\n        if (this.datosCajaAbierta && this.datosCajaAbierta.Estado === 'Abierta') {\n          this.ventasTotales = this.datosCajaAbierta.totalVentas || 0;\n          this.gastosTotales = this.datosCajaAbierta.totalGastos || 0;\n          this.balanceTotal = this.ventasTotales - this.gastosTotales;\n        } else {\n          // Caja no está abierta, por lo que no necesitamos los datos financieros\n          this.ventasTotales = 0;\n          this.gastosTotales = 0;\n          this.balanceTotal = 0;\n        }\n      } catch (error) {\n        console.error('Error al obtener datos de la caja:', error);\n      }\n    },\n    async cerrarCaja() {\n      const formData = {\n        montoFinal: this.montoFinal,\n        fechaHoraCierre: this.fechaHoraCierre\n      };\n      try {\n        const response = await axios.post('http://localhost:3000/cierrecaja', formData, {\n          withCredentials: true\n        });\n        console.log('Respuesta del servidor:', response.data);\n        alert('Se cerró caja correctamente');\n        this.limpiarDatos(); // Limpiar datos\n        await this.obtenerDatosCaja(); // Actualizar datos después de cerrar la caja\n\n        // Emitir evento para notificar al componente principal\n        this.$emit('caja-cerrada');\n      } catch (error) {\n        console.error('Error al cerrar caja:', error);\n        alert('Error al cerrar caja: ' + error.message);\n      }\n    },\n    async abrirCaja() {\n      const formData = {\n        fechaHora: this.fechaHoraCierre,\n        montoInicial: this.montoFinal // Usar montoFinal para abrir caja, ajusta si es necesario\n      };\n      try {\n        const response = await axios.post('http://localhost:3000/AbrirCaja', formData, {\n          withCredentials: true\n        });\n        console.log('Respuesta del servidor:', response.data);\n        alert('Se abrió caja correctamente');\n\n        // Actualizar datos después de abrir la caja\n        await this.obtenerDatosCaja();\n      } catch (error) {\n        console.error('Error al abrir caja:', error);\n        alert('Error al abrir caja: ' + error.message);\n      }\n    },\n    limpiarDatos() {\n      this.montoFinal = '';\n      this.fechaHoraCierre = new Date().toISOString().slice(0, 16);\n    }\n  }\n};","map":{"version":3,"names":["axios","name","data","montoFinal","fechaHoraCierre","ventasTotales","undefined","gastosTotales","balanceTotal","datosCajaAbierta","mounted","Date","toISOString","slice","obtenerDatosCaja","methods","response","get","withCredentials","Estado","totalVentas","totalGastos","error","console","cerrarCaja","formData","post","log","alert","limpiarDatos","$emit","message","abrirCaja","fechaHora","montoInicial"],"sources":["D:\\Vers_Git_Proyecto\\Proyect_Web\\src\\components\\CerrarCaja.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <p v-if=\"datosCajaAbierta\" id=\"IDAbrirCaja\">ID Caja: {{ datosCajaAbierta.IDAbrirCaja }}</p>\r\n    <p v-if=\"datosCajaAbierta\" id=\"Fecha\">Fecha y Hora: {{ datosCajaAbierta.Fecha }}</p>\r\n    <p v-if=\"datosCajaAbierta\" id=\"MontoInicial\">Monto Inicial: {{ datosCajaAbierta.MontoInicial }}</p>\r\n    <p v-if=\"ventasTotales !== undefined\">Ventas Totales: {{ ventasTotales }}</p>\r\n    <p v-if=\"gastosTotales !== undefined\">Gastos Totales: {{ gastosTotales }}</p>\r\n    <p v-if=\"ventasTotales !== undefined && gastosTotales !== undefined\">Balance Total: {{ balanceTotal }}</p>\r\n\r\n    <form v-if=\"datosCajaAbierta && datosCajaAbierta.Estado === 'Abierta'\" @submit.prevent=\"cerrarCaja\">\r\n      <div class=\"form-group\">\r\n        <label for=\"montoFinal\">Total de dinero en efectivo:</label>\r\n        <input\r\n          type=\"number\"\r\n          id=\"montoFinal\"\r\n          v-model=\"montoFinal\"\r\n          class=\"form-control\"\r\n          placeholder=\"Ingrese el monto final\"\r\n          required\r\n        />\r\n      </div>\r\n      <button type=\"submit\" class=\"btn btn-primary mt-3\">Cerrar Caja</button>\r\n    </form>\r\n\r\n    <button v-if=\"!datosCajaAbierta || datosCajaAbierta.Estado === 'Cerrada'\" @click=\"abrirCaja\" class=\"btn btn-success mt-3\">\r\n      Abrir Caja\r\n    </button>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  name: 'CerrarCaja',\r\n  data() {\r\n    return {\r\n      montoFinal: '',\r\n      fechaHoraCierre: '',\r\n      ventasTotales: undefined,\r\n      gastosTotales: undefined,\r\n      balanceTotal: undefined,\r\n      datosCajaAbierta: null\r\n    };\r\n  },\r\n  async mounted() {\r\n    this.fechaHoraCierre = new Date().toISOString().slice(0, 16);\r\n    await this.obtenerDatosCaja(); // Llamar a la función para obtener los datos al montar el componente\r\n  },\r\n  methods: {\r\n    async obtenerDatosCaja() {\r\n      try {\r\n        const response = await axios.get('http://localhost:3000/AbrirCaja', { withCredentials: true });\r\n        this.datosCajaAbierta = response.data;\r\n        if (this.datosCajaAbierta && this.datosCajaAbierta.Estado === 'Abierta') {\r\n          this.ventasTotales = this.datosCajaAbierta.totalVentas || 0;\r\n          this.gastosTotales = this.datosCajaAbierta.totalGastos || 0;\r\n          this.balanceTotal = this.ventasTotales - this.gastosTotales;\r\n        } else {\r\n          // Caja no está abierta, por lo que no necesitamos los datos financieros\r\n          this.ventasTotales = 0;\r\n          this.gastosTotales = 0;\r\n          this.balanceTotal = 0;\r\n        }\r\n      } catch (error) {\r\n        console.error('Error al obtener datos de la caja:', error);\r\n      }\r\n    },\r\n    async cerrarCaja() {\r\n      const formData = {\r\n        montoFinal: this.montoFinal,\r\n        fechaHoraCierre: this.fechaHoraCierre,\r\n      };\r\n      try {\r\n        const response = await axios.post('http://localhost:3000/cierrecaja', formData, { withCredentials: true });\r\n        console.log('Respuesta del servidor:', response.data);\r\n        alert('Se cerró caja correctamente');\r\n\r\n        this.limpiarDatos(); // Limpiar datos\r\n        await this.obtenerDatosCaja(); // Actualizar datos después de cerrar la caja\r\n\r\n        // Emitir evento para notificar al componente principal\r\n        this.$emit('caja-cerrada');\r\n\r\n      } catch (error) {\r\n        console.error('Error al cerrar caja:', error);\r\n        alert('Error al cerrar caja: ' + error.message);\r\n      }\r\n    },\r\n    async abrirCaja() {\r\n      const formData = {\r\n        fechaHora: this.fechaHoraCierre,\r\n        montoInicial: this.montoFinal, // Usar montoFinal para abrir caja, ajusta si es necesario\r\n      };\r\n      try {\r\n        const response = await axios.post('http://localhost:3000/AbrirCaja', formData, { withCredentials: true });\r\n        console.log('Respuesta del servidor:', response.data);\r\n        alert('Se abrió caja correctamente');\r\n\r\n        // Actualizar datos después de abrir la caja\r\n        await this.obtenerDatosCaja();\r\n        \r\n      } catch (error) {\r\n        console.error('Error al abrir caja:', error);\r\n        alert('Error al abrir caja: ' + error.message);\r\n      }\r\n    },\r\n    limpiarDatos() {\r\n      this.montoFinal = '';\r\n      this.fechaHoraCierre = new Date().toISOString().slice(0, 16);\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n \r\n  \r\n  <style scoped>\r\n  .form-group {\r\n    margin-bottom: 15px;\r\n  }\r\n  \r\n  .btn-primary {\r\n    background-color: #007bff;\r\n    border-color: #007bff;\r\n    text-align: end;\r\n  }\r\n  \r\n  .btn-primary:hover {\r\n    background-color: #0056b3;\r\n    border-color: #0056b3;\r\n  }\r\n  </style>\r\n  "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}