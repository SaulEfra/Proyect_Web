{"ast":null,"code":"import axios from 'axios';\nexport default {\n  name: 'CerrarCaja',\n  props: {\n    datosCajaAbierta: {\n      type: Object,\n      required: true\n    }\n  },\n  data() {\n    return {\n      montoFinal: '',\n      fechaHoraCierre: '',\n      ventasTotales: undefined,\n      gastosTotales: undefined,\n      balanceTotal: undefined,\n      datosCajaAbierta2: null\n    };\n  },\n  mounted() {\n    this.fechaHoraCierre = new Date().toISOString().slice(0, 16);\n    this.obtenerDatosCaja(); // Llamar a la función para obtener los datos\n  },\n  methods: {\n    async obtenerDatosCaja() {\n      try {\n        const response = await axios.get('http://localhost:3000/AbrirCaja', {\n          withCredentials: true\n        }); // Ajusta la URL si es necesario\n        this.datosCajaAbierta2 = response.data;\n        if (this.datosCajaAbierta2.Estado === 'Abierta') {\n          this.ventasTotales = response.data.totalVentas;\n          this.gastosTotales = response.data.totalGastos;\n          this.balanceTotal = this.ventasTotales - this.gastosTotales;\n        }\n      } catch (error) {\n        console.error('Error al obtener datos de la caja:', error);\n      }\n    },\n    async cerrarCaja() {\n      const formData = {\n        montoFinal: this.montoFinal,\n        fechaHoraCierre: this.fechaHoraCierre\n      };\n      try {\n        const response = await axios.post('http://localhost:3000/cierrecaja', formData, {\n          withCredentials: true\n        });\n        console.log('Respuesta del servidor:', response.data);\n        alert('Se cerró caja correctamente');\n        this.limpiarDatos(); // Limpiar datos\n\n        // Emitir evento para notificar al componente principal\n        this.$emit('caja-cerrada');\n      } catch (error) {\n        console.error('Error al cerrar caja:', error);\n        alert('Error al cerrar caja: ' + error.message);\n      }\n    },\n    limpiarDatos() {\n      this.montoFinal = '';\n      this.fechaHoraCierre = new Date().toISOString().slice(0, 16);\n    }\n  }\n};","map":{"version":3,"names":["axios","name","props","datosCajaAbierta","type","Object","required","data","montoFinal","fechaHoraCierre","ventasTotales","undefined","gastosTotales","balanceTotal","datosCajaAbierta2","mounted","Date","toISOString","slice","obtenerDatosCaja","methods","response","get","withCredentials","Estado","totalVentas","totalGastos","error","console","cerrarCaja","formData","post","log","alert","limpiarDatos","$emit","message"],"sources":["D:\\Vers_Git_Proyecto\\Proyect_Web\\src\\components\\CerrarCaja.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <p v-if=\"datosCajaAbierta2\">\r\n      <span>ID Caja: {{ datosCajaAbierta2.IDAbrirCaja }}</span><br>\r\n      <span>Fecha y Hora: {{ datosCajaAbierta2.Fecha }}</span><br>\r\n      <span>Monto Inicial: {{ datosCajaAbierta2.MontoInicial }}</span><br>\r\n      <span>Estado: {{ datosCajaAbierta2.Estado }}</span><br>\r\n      <span v-if=\"datosCajaAbierta2.Estado === 'Abierta'\">La caja está abierta.</span>\r\n    </p>\r\n    <form v-if=\"datosCajaAbierta2 && datosCajaAbierta2.Estado === 'Abierta'\" @submit.prevent=\"cerrarCaja\">\r\n      <div class=\"form-group\">\r\n        <label for=\"montoFinal\">Total de dinero en efectivo:</label>\r\n        <input\r\n          type=\"number\"\r\n          id=\"montoFinal\"\r\n          v-model=\"montoFinal\"\r\n          class=\"form-control\"\r\n          placeholder=\"Ingrese el monto Final\"\r\n          required\r\n        />\r\n      </div>\r\n      <button type=\"submit\" class=\"btn btn-primary mt-3\">Cerrar Caja</button>\r\n    </form>\r\n    <button v-if=\"datosCajaAbierta2 && datosCajaAbierta2.Estado === 'Cerrada'\" disabled>Caja ya cerrada</button>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  name: 'CerrarCaja',\r\n  props: {\r\n    datosCajaAbierta: {\r\n      type: Object,\r\n      required: true\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      montoFinal: '',\r\n      fechaHoraCierre: '',\r\n      ventasTotales: undefined,\r\n      gastosTotales: undefined,\r\n      balanceTotal: undefined,\r\n      datosCajaAbierta2: null\r\n    };\r\n  },\r\n  mounted() {\r\n    this.fechaHoraCierre = new Date().toISOString().slice(0, 16);\r\n    this.obtenerDatosCaja(); // Llamar a la función para obtener los datos\r\n  },\r\n  methods: {\r\n    async obtenerDatosCaja() {\r\n      try {\r\n        const response = await axios.get('http://localhost:3000/AbrirCaja', { withCredentials: true }); // Ajusta la URL si es necesario\r\n        this.datosCajaAbierta2 = response.data;\r\n        if (this.datosCajaAbierta2.Estado === 'Abierta') {\r\n          this.ventasTotales = response.data.totalVentas;\r\n          this.gastosTotales = response.data.totalGastos;\r\n          this.balanceTotal = this.ventasTotales - this.gastosTotales;\r\n        }\r\n      } catch (error) {\r\n        console.error('Error al obtener datos de la caja:', error);\r\n      }\r\n    },\r\n    async cerrarCaja() {\r\n      const formData = {\r\n        montoFinal: this.montoFinal,\r\n        fechaHoraCierre: this.fechaHoraCierre\r\n      };\r\n      try {\r\n        const response = await axios.post('http://localhost:3000/cierrecaja', formData, { withCredentials: true });\r\n        console.log('Respuesta del servidor:', response.data);\r\n        alert('Se cerró caja correctamente');\r\n\r\n        this.limpiarDatos(); // Limpiar datos\r\n\r\n        // Emitir evento para notificar al componente principal\r\n        this.$emit('caja-cerrada');\r\n\r\n      } catch (error) {\r\n        console.error('Error al cerrar caja:', error);\r\n        alert('Error al cerrar caja: ' + error.message);\r\n      }\r\n    },\r\n    limpiarDatos() {\r\n      this.montoFinal = '';\r\n      this.fechaHoraCierre = new Date().toISOString().slice(0, 16);\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n \r\n  \r\n  <style scoped>\r\n  .form-group {\r\n    margin-bottom: 15px;\r\n  }\r\n  \r\n  .btn-primary {\r\n    background-color: #007bff;\r\n    border-color: #007bff;\r\n    text-align: end;\r\n  }\r\n  \r\n  .btn-primary:hover {\r\n    background-color: #0056b3;\r\n    border-color: #0056b3;\r\n  }\r\n  </style>\r\n  "],"mappings":"AA4BA,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAI,EAAE,YAAY;EAClBC,KAAK,EAAE;IACLC,gBAAgB,EAAE;MAChBC,IAAI,EAAEC,MAAM;MACZC,QAAQ,EAAE;IACZ;EACF,CAAC;EACDC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,UAAU,EAAE,EAAE;MACdC,eAAe,EAAE,EAAE;MACnBC,aAAa,EAAEC,SAAS;MACxBC,aAAa,EAAED,SAAS;MACxBE,YAAY,EAAEF,SAAS;MACvBG,iBAAiB,EAAE;IACrB,CAAC;EACH,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACN,eAAc,GAAI,IAAIO,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC;IAC5D,IAAI,CAACC,gBAAgB,CAAC,CAAC,EAAE;EAC3B,CAAC;EACDC,OAAO,EAAE;IACP,MAAMD,gBAAgBA,CAAA,EAAG;MACvB,IAAI;QACF,MAAME,QAAO,GAAI,MAAMrB,KAAK,CAACsB,GAAG,CAAC,iCAAiC,EAAE;UAAEC,eAAe,EAAE;QAAK,CAAC,CAAC,EAAE;QAChG,IAAI,CAACT,iBAAgB,GAAIO,QAAQ,CAACd,IAAI;QACtC,IAAI,IAAI,CAACO,iBAAiB,CAACU,MAAK,KAAM,SAAS,EAAE;UAC/C,IAAI,CAACd,aAAY,GAAIW,QAAQ,CAACd,IAAI,CAACkB,WAAW;UAC9C,IAAI,CAACb,aAAY,GAAIS,QAAQ,CAACd,IAAI,CAACmB,WAAW;UAC9C,IAAI,CAACb,YAAW,GAAI,IAAI,CAACH,aAAY,GAAI,IAAI,CAACE,aAAa;QAC7D;MACF,EAAE,OAAOe,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,oCAAoC,EAAEA,KAAK,CAAC;MAC5D;IACF,CAAC;IACD,MAAME,UAAUA,CAAA,EAAG;MACjB,MAAMC,QAAO,GAAI;QACftB,UAAU,EAAE,IAAI,CAACA,UAAU;QAC3BC,eAAe,EAAE,IAAI,CAACA;MACxB,CAAC;MACD,IAAI;QACF,MAAMY,QAAO,GAAI,MAAMrB,KAAK,CAAC+B,IAAI,CAAC,kCAAkC,EAAED,QAAQ,EAAE;UAAEP,eAAe,EAAE;QAAK,CAAC,CAAC;QAC1GK,OAAO,CAACI,GAAG,CAAC,yBAAyB,EAAEX,QAAQ,CAACd,IAAI,CAAC;QACrD0B,KAAK,CAAC,6BAA6B,CAAC;QAEpC,IAAI,CAACC,YAAY,CAAC,CAAC,EAAE;;QAErB;QACA,IAAI,CAACC,KAAK,CAAC,cAAc,CAAC;MAE5B,EAAE,OAAOR,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;QAC7CM,KAAK,CAAC,wBAAuB,GAAIN,KAAK,CAACS,OAAO,CAAC;MACjD;IACF,CAAC;IACDF,YAAYA,CAAA,EAAG;MACb,IAAI,CAAC1B,UAAS,GAAI,EAAE;MACpB,IAAI,CAACC,eAAc,GAAI,IAAIO,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC;IAC9D;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}