{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  id: \"app\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_router_view = _resolveComponent(\"router-view\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_router_view)]);\n}","map":{"version":3,"names":["id","_createElementBlock","_hoisted_1","_createVNode","_component_router_view"],"sources":["D:\\Vers_Git_Proyecto\\Proyect_Web\\src\\App.vue"],"sourcesContent":["<template>\r\n  <div id=\"app\">\r\n    <router-view></router-view>\r\n  </div>\r\n</template>\r\n\r\n\r\n<script>\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  name: 'App',\r\n  data() {\r\n    return {\r\n      cajaAbierta: false,\r\n    };\r\n  },\r\n  async created() {\r\n    await this.verificarEstadoCaja();\r\n  },\r\n  methods: {\r\n    async verificarEstadoCaja() {\r\n      try {\r\n        const response = await axios.get('http://localhost:3000/AbrirCaja', { withCredentials: true });\r\n        const datos = response.data;\r\n\r\n        if (datos && datos.Estado === 'abierta') {\r\n          this.cajaAbierta = true;\r\n          // Puedes almacenar esta informaci√≥n en localStorage o vuex para usarla en otros componentes\r\n          localStorage.setItem('cajaAbierta', JSON.stringify(datos));\r\n        } else {\r\n          this.cajaAbierta = false;\r\n          localStorage.removeItem('cajaAbierta');\r\n        }\r\n      } catch (error) {\r\n        console.error('Error al verificar el estado de la caja:', error);\r\n        this.cajaAbierta = false;\r\n        localStorage.removeItem('cajaAbierta');\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>"],"mappings":";;EACOA,EAAE,EAAC;AAAK;;;uBAAbC,mBAAA,CAEM,OAFNC,UAEM,GADJC,YAAA,CAA2BC,sBAAA,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}