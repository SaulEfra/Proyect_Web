{"ast":null,"code":"import CardProduct from './CardProduct.vue';\nimport AddProductForm from './AddProductForm.vue';\nimport axios from 'axios';\nimport ActProd from './ActProducto.vue';\nimport ParteLateral from './ParteLateral.vue';\nexport default {\n  name: 'ProductInventory',\n  components: {\n    AddProductForm,\n    CardProduct,\n    ActProd,\n    ParteLateral\n  },\n  data() {\n    return {\n      searchQuery: '',\n      totalReferences: 0,\n      inventoryCost: '',\n      categoriaName: '',\n      CantidadProduc: '',\n      datosprod: [],\n      datosprodcount: [],\n      datoselim: [],\n      idparaact: [],\n      categoriacreada: false\n    };\n  },\n  mounted() {\n    this.Productos();\n    this.Productoscount();\n  },\n  methods: {\n    async Productos() {\n      try {\n        const response = await axios.get('http://localhost:3000/Producto');\n        this.datosprod = response.data.results;\n        console.log(this.datosprod);\n      } catch (error) {\n        console.error('Error al obtener los productos:', error);\n        alert('Error al obtener los productos');\n      }\n    },\n    async createCategoriaProd() {\n      const formData = {\n        categoriaName: this.categoriaName\n      };\n      try {\n        const response = await axios.post('http://localhost:3000/categorias', formData);\n        console.log('Respuesta del servidor:', response.data);\n        const Responsedata = await axios.get('http://localhost:3000/categoriaproducto');\n        const datocate = Responsedata.data[0]; // Asumiendo que deseas la primera categoría\n        alert(`Última Categoría Registrada:\n  ID Categoría: ${datocate.IDCatProd}\n  Nombre de Categoría: ${datocate.NombreCategoria}\n`);\n      } catch (error) {\n        console.error('Error al crear el producto:', error);\n\n        //alert('Error al crear la categoría: ' + error.message);\n      }\n    },\n    async createCantidadProduct() {\n      const formData = {\n        CantidadProduc: this.CantidadProduc\n      };\n      try {\n        const response = await axios.post('http://localhost:3000/cantidadproduc', formData);\n        console.log('Respuesta del servidor:', response.data);\n        const dataResponse = await axios.get('http://localhost:3000/cantidadproducDos');\n        const datocant = dataResponse.data;\n        alert(`Última Cantidad Registrada:\n  ID Cantidad de Venta: ${datocant.IDCantidad}\n  Nombre de Cantidad Venta: ${datocant.NombreCantidad}\n`);\n        this.Cantidades();\n      } catch (error) {\n        console.error('Error al crear el producto:', error);\n        //alert('Error al crear la cantidad: ' + error.message);\n      }\n    },\n    async Productoscount() {\n      try {\n        const response = await axios.get('http://localhost:3000/Productocont');\n        this.datosprodcount = response.data.results;\n      } catch (error) {\n        console.error('Error al obtener los productos:', error);\n        alert('Error al obtener los productos');\n      }\n    },\n    async eliminarProducto(prop) {\n      console.log(prop);\n      try {\n        axios.delete(`http://localhost:3000/productoselim/${prop}`).then(response => {\n          console.log(response.data);\n          this.Productos();\n        });\n      } catch (error) {\n        console.error('Error al obtener los productos:', error);\n        alert('Error al obtener los productos');\n      }\n    },\n    async actualiProductprueb(prop) {\n      console.log(prop);\n      let datosprod = prop;\n      this.idparaact = datosprod;\n      alert(datosprod);\n    }\n  }\n};","map":{"version":3,"names":["CardProduct","AddProductForm","axios","ActProd","ParteLateral","name","components","data","searchQuery","totalReferences","inventoryCost","categoriaName","CantidadProduc","datosprod","datosprodcount","datoselim","idparaact","categoriacreada","mounted","Productos","Productoscount","methods","response","get","results","console","log","error","alert","createCategoriaProd","formData","post","Responsedata","datocate","IDCatProd","NombreCategoria","createCantidadProduct","dataResponse","datocant","IDCantidad","NombreCantidad","Cantidades","eliminarProducto","prop","delete","then","actualiProductprueb"],"sources":["D:\\Vers_Git_Proyecto\\Proyect_Web\\src\\components\\Productos.vue"],"sourcesContent":["<template>\r\n  <div class=\"container-fluid\">\r\n    <div class=\"row\">\r\n      <!-- Columna para ParteLateral -->\r\n      <div class=\"col-lg-2 col-md-3 col-sm-12 parte-lateral\">\r\n        <ParteLateral />\r\n      </div>\r\n\r\n      <!-- Columna para el contenido principal -->\r\n      <div class=\"col-lg-10 col-md-9 col-sm-12 main-content\">\r\n        <div class=\"header\">\r\n          <h4 class=\"mb-4 text-center\">Productos</h4>\r\n        </div>\r\n        <div class=\"shadow rounded contProduc\">\r\n          <div class=\"header-btn\">\r\n            <div class=\"row\">\r\n              <div class=\"col-lg-6\">\r\n                <input type=\"text\" class=\"form-control inp-btn\" placeholder=\"Buscar producto...\" v-model=\"searchQuery\">\r\n              </div>\r\n              <div class=\"col-lg-2\">\r\n                <button type=\"button\" class=\"btn\" data-bs-toggle=\"modal\" data-bs-target=\"#agregarproducto\">Agregar\r\n                  Producto</button>\r\n              </div>\r\n              <div class=\"col-lg-2\">\r\n                <button type=\"button\" class=\"btn\" data-bs-toggle=\"modal\" data-bs-target=\"#crearcategoria\">Crear\r\n                  Categoría</button>\r\n              </div>\r\n              <div class=\"col-lg-2\">\r\n                <button type=\"button\" class=\"btn\" data-bs-toggle=\"modal\" data-bs-target=\"#crearcantidad\">Crear\r\n                  cantidad</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <!-- Modal para Agregar Producto -->\r\n          <div class=\"modal fade\" id=\"agregarproducto\" tabindex=\"-1\" aria-labelledby=\"agregarproductoLabel\"\r\n            aria-hidden=\"true\">\r\n            <div class=\"modal-dialog modal-lg\">\r\n              <div class=\"modal-content\">\r\n                <div class=\"modal-header\">\r\n                  <h5 class=\"modal-title\" id=\"agregarproductoLabel\">Agregar Producto</h5>\r\n                  <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\r\n                </div>\r\n                <div class=\"modal-body\">\r\n                  <AddProductForm @actuprod=\"Productos\" />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <!-- Modal para actualizar Producto -->\r\n          <div class=\"modal fade\" id=\"actualizarproducto\" tabindex=\"-1\" aria-labelledby=\"actualizarproductoLabel\"\r\n            aria-hidden=\"true\">\r\n            <div class=\"modal-dialog modal-lg\">\r\n              <div class=\"modal-content\">\r\n                <div class=\"modal-header\">\r\n                  <h5 class=\"modal-title\" id=\"actualizarproductoLabel\">Actualizar Producto</h5>\r\n                  <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\r\n                </div>\r\n                <div class=\"modal-body\">\r\n                  <ActProd :idparactuproduc=\"idparaact\" />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <!-- Modal para Crear Categoría -->\r\n          <div class=\"modal fade\" id=\"crearcategoria\" tabindex=\"-1\" aria-labelledby=\"crearcategoriaLabel\"\r\n            aria-hidden=\"true\">\r\n            <div class=\"modal-dialog modal-lg\">\r\n              <div class=\"modal-content\">\r\n                <div class=\"modal-header\">\r\n                  <h5 class=\"modal-title\" id=\"crearcategoriaLabel\">Crear Categoría</h5>\r\n                  <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\r\n                </div>\r\n                <div class=\"modal-body\">\r\n                  <form @submit.prevent=\"createCategoriaProd\">\r\n                    <label for=\"Nuevcategoria\" class=\"form-label\">Nombre de la categoría</label>\r\n                    <input v-model=\"categoriaName\" class=\"form-control mb-3\" id=\"Nuevcategoria\" type=\"text\"\r\n                      placeholder=\"ejemplo: Artículos de escritura\" required>\r\n                    <div class=\"text-end\">\r\n                      <button class=\"btn btn-primary btn-lg\" type=\"submit\">Crear Categoría</button>\r\n                    </div>\r\n                  </form>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <!-- Modal para Crear Cantidad -->\r\n          <div class=\"modal fade\" id=\"crearcantidad\" tabindex=\"-1\" aria-labelledby=\"crearcantidadlabel\"\r\n            aria-hidden=\"true\">\r\n            <div class=\"modal-dialog modal-lg\">\r\n              <div class=\"modal-content\">\r\n                <div class=\"modal-header\">\r\n                  <h5 class=\"modal-title\" id=\"crearcantidadlabel\">Crear Cantidad para los productos</h5>\r\n                  <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\r\n                </div>\r\n                <div class=\"modal-body\">\r\n                  <form @submit.prevent=\"createCantidadProduct\">\r\n                    <label for=\"Nuevcategoria\" class=\"form-label\">Nombre de la cantidad</label>\r\n                    <input v-model=\"CantidadProduc\" class=\"form-control mb-3\" id=\"Nuevcategoria\" type=\"text\"\r\n                      placeholder=\"ejemplo: Kilos\" required>\r\n                    <div class=\"text-end\">\r\n                      <button class=\"btn btn-primary btn-lg\" type=\"submit\">Crear Cantidad</button>\r\n                    </div>\r\n                  </form>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"movements\">\r\n            <div class=\"row\">\r\n              <div class=\"data-pro col-lg-6\" v-for=\"dtsprodcoun in datosprodcount\" :key=\"dtsprodcoun\">\r\n                Total de Productos: {{ dtsprodcoun.cantidadproduct }}\r\n              </div>\r\n              <div class=\"data-pro col-lg-6\">Costo del Inventario: {{ inventoryCost }}</div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"karproducto\">\r\n          <CardProduct v-for=\"prod in datosprod\" :key=\"prod.IDProducto\" :title=\"prod.Nombre\"\r\n            :Cantidadprod=\"prod.CantidadExistencia\" :descrip=\"prod.Descripcion\" :imagen=\"prod.Datos\"\r\n            :presioventa=\"prod.PrecioVenta\" :presioprod=\"prod.PrecioProduc\" @elimin=\"eliminarProducto\"\r\n            :idprod=\"prod.IDProducto\" @actu=\"actualiProductprueb\" />\r\n        </div>\r\n\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport CardProduct from './CardProduct.vue';\r\nimport AddProductForm from './AddProductForm.vue';\r\nimport axios from 'axios';\r\nimport ActProd from './ActProducto.vue';\r\nimport ParteLateral from './ParteLateral.vue';\r\n\r\nexport default {\r\n  name: 'ProductInventory',\r\n  components: {\r\n    AddProductForm,\r\n    CardProduct,\r\n    ActProd,\r\n    ParteLateral,\r\n  },\r\n  data() {\r\n    return {\r\n      searchQuery: '',\r\n      totalReferences: 0,\r\n      inventoryCost:'' ,\r\n      categoriaName: '',\r\n      CantidadProduc: '',\r\n      datosprod: [],\r\n      datosprodcount: [],\r\n      datoselim: [],\r\n      idparaact: [],\r\n      categoriacreada: false\r\n    };\r\n  },\r\n  mounted() {\r\n    this.Productos();\r\n    this.Productoscount();\r\n\r\n  },\r\n  methods: {\r\n    async Productos() {\r\n      try {\r\n        const response = await axios.get('http://localhost:3000/Producto');\r\n        this.datosprod = response.data.results;\r\n        console.log(this.datosprod);\r\n      } catch (error) {\r\n        console.error('Error al obtener los productos:', error);\r\n        alert('Error al obtener los productos');\r\n      }\r\n    },\r\n    async createCategoriaProd() {\r\n      const formData = {\r\n        categoriaName: this.categoriaName\r\n      };\r\n      try {\r\n        const response = await axios.post('http://localhost:3000/categorias', formData);\r\n        console.log('Respuesta del servidor:', response.data);\r\n\r\n        const Responsedata = await axios.get('http://localhost:3000/categoriaproducto');\r\nconst datocate = Responsedata.data[0]; // Asumiendo que deseas la primera categoría\r\nalert(`Última Categoría Registrada:\r\n  ID Categoría: ${datocate.IDCatProd}\r\n  Nombre de Categoría: ${datocate.NombreCategoria}\r\n`);\r\n\r\n\r\n\r\n      } catch (error) {\r\n        console.error('Error al crear el producto:', error);\r\n\r\n        //alert('Error al crear la categoría: ' + error.message);\r\n      }\r\n    },\r\n    async createCantidadProduct() {\r\n      const formData = {\r\n        CantidadProduc: this.CantidadProduc\r\n      };\r\n      try {\r\n        const response = await axios.post('http://localhost:3000/cantidadproduc', formData);\r\n        console.log('Respuesta del servidor:', response.data);\r\n\r\n        const dataResponse = await axios.get('http://localhost:3000/cantidadproducDos');\r\n        const datocant = dataResponse.data;\r\n        alert(`Última Cantidad Registrada:\r\n  ID Cantidad de Venta: ${datocant.IDCantidad}\r\n  Nombre de Cantidad Venta: ${datocant.NombreCantidad}\r\n`);\r\n\r\n\r\n        this.Cantidades();\r\n      } catch (error) {\r\n        console.error('Error al crear el producto:', error);\r\n        //alert('Error al crear la cantidad: ' + error.message);\r\n      }\r\n    },\r\n    async Productoscount() {\r\n      try {\r\n        const response = await axios.get('http://localhost:3000/Productocont');\r\n        this.datosprodcount = response.data.results;\r\n      } catch (error) {\r\n        console.error('Error al obtener los productos:', error);\r\n        alert('Error al obtener los productos');\r\n      }\r\n    },\r\n    async eliminarProducto(prop) {\r\n      console.log(prop);\r\n      try {\r\n        axios.delete(`http://localhost:3000/productoselim/${prop}`)\r\n          .then(response => {\r\n            console.log(response.data);\r\n            this.Productos();\r\n          });\r\n      } catch (error) {\r\n        console.error('Error al obtener los productos:', error);\r\n        alert('Error al obtener los productos');\r\n      }\r\n    },\r\n    async actualiProductprueb(prop) {\r\n      console.log(prop);\r\n      let datosprod = prop;\r\n      this.idparaact = datosprod;\r\n      alert(datosprod);\r\n    },\r\n\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.header {\r\n  display: flex;\r\n  align-items: center;\r\n  padding: 10px;\r\n  border-bottom: 1px solid #ccc;\r\n  margin-top: 20px;\r\n}\r\n\r\n.movements {\r\n  padding-bottom: 80px;\r\n}\r\n\r\n.data-pro {\r\n  text-align: center;\r\n  height: 50px;\r\n  width: 500px;\r\n  background-color: #D5E4FF;\r\n  flex-direction: row;\r\n  margin-left: 60px;\r\n  padding: 10px;\r\n  border-radius: 10px;\r\n}\r\n\r\n.btn {\r\n  padding: 10px;\r\n  font-size: 14px;\r\n  border: 1px solid rgb(137, 149, 226);\r\n  border-radius: 5px;\r\n  background-color: #eff5ff;\r\n  cursor: pointer;\r\n  height: 50px;\r\n  width: 150px;\r\n  color: black;\r\n  margin-left: 20px;\r\n}\r\n\r\n.btn:hover {\r\n  background-color: #bdd6ff;\r\n  color: white;\r\n  border: 1px solid rgb(120, 134, 223);\r\n}\r\n\r\n/* Estilos personalizados */\r\n.parte-lateral {\r\n  background-color: #f8f9fa;\r\n  /* Cambia este color según tus necesidades */\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  bottom: 0;\r\n  overflow-y: auto;\r\n}\r\n\r\n.main-content {\r\n  margin-left: 16.666667%;\r\n  /* Esto equivale a col-lg-2 */\r\n  padding: 20px;\r\n}\r\n\r\n.card {\r\n  margin-top: 20px;\r\n  margin-left: 50px;\r\n}\r\n\r\n.karproducto {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  flex-direction: row;\r\n  margin-top: 20px;\r\n}\r\n\r\n.header-btn {\r\n  padding: 20px;\r\n  padding-top: 40px;\r\n  margin-top: 20px;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.inp-btn {\r\n  height: 50px;\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}