{"ast":null,"code":"import axios from 'axios';\nexport default {\n  name: 'ActProd',\n  data(props) {\n    return {\n      productNam: '',\n      cantVen: '',\n      Costunit: 0,\n      pric: 0,\n      canti: 0,\n      Factura: '',\n      descriptio: '',\n      datoscant: [],\n      datoscat: [],\n      idNeg: 1,\n      idimg: 1,\n      selectfile: null,\n      props\n    };\n  },\n  mounted() {\n    this.Cantidades();\n    this.Categorias();\n  },\n  props: {\n    idparactuproduc: Object\n  },\n  methods: {\n    async Cantidades() {\n      try {\n        const response = await axios.get('http://localhost:3000/cantidadproducDos');\n        this.datoscant = response.data.results;\n      } catch (error) {\n        console.error('Error al obtener las cantidades:', error);\n        alert('Error al obtener las cantidades');\n      }\n    },\n    async Categorias() {\n      try {\n        const response = await axios.get('http://localhost:3000/categoriaproducto');\n        this.datoscat = response.data.results;\n      } catch (error) {\n        console.error('Error al obtener las categorias:', error);\n        alert('Error al obtener las categorias');\n      }\n    },\n    onFileChange(event) {\n      this.selectfile = event.target.files[0];\n    },\n    async actualiProduct() {\n      const formDatos = {\n        productNam: this.props.idparactuproduc.nombre,\n        Costunit: this.props.idparactuproduc.presioprod,\n        pric: this.props.idparactuproduc.Presiovent,\n        canti: this.props.idparactuproduc.cantid,\n        Factura: this.Factura,\n        descriptio: this.props.idparactuproduc.Desc,\n        idneg: this.idNeg,\n        idimg: this.idimg,\n        Datos: this.selectfile,\n        identificadorprod: this.props.idparactuproduc\n      };\n      try {\n        const response = await axios.put('http://localhost:3000/actualizarproducto/:id', formDatos);\n        console.log('Respuesta del servidor:', response.data);\n        alert('producto actualizado con éxito');\n        this.productNam = \"\", this.Costunit = 0, this.pric = 0, this.canti = 0, this.Factura = \"\", this.descriptio = \"\", this.selectfile = null;\n      } catch (error) {\n        console.error('Error al actualizar el producto:', error);\n        alert('Error al actualizar el producto: ' + error.message);\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","name","data","props","productNam","cantVen","Costunit","pric","canti","Factura","descriptio","datoscant","datoscat","idNeg","idimg","selectfile","mounted","Cantidades","Categorias","idparactuproduc","Object","methods","response","get","results","error","console","alert","onFileChange","event","target","files","actualiProduct","formDatos","nombre","presioprod","Presiovent","cantid","Desc","idneg","Datos","identificadorprod","put","log","message"],"sources":["C:\\Users\\Kenny\\Downloads\\Proyect\\Proyect_Web\\src\\components\\ActProducto.vue"],"sourcesContent":["<template>\r\n     <div class=\"container mt-5\">\r\n    <div class=\"row justify-content-center\">\r\n      <div class=\"col-lg-12\">\r\n        <div class=\"card\">\r\n          <div class=\"card-body\">\r\n            <div class=\"d-none\">\r\n              {{ props.idparactuproduc.id }}\r\n            </div>\r\n            <div class=\"mb-3\">\r\n              <label for=\"fileUpload\" class=\"form-label\">Selecciona una imagen para subir</label>\r\n              <input  type=\"file\" class=\"form-control\" id=\"fileUpload\" accept=\"image/*\" @change=\"onFileChange\">\r\n            </div>\r\n            <div class=\"row\">\r\n              <div class=\"col-lg-6\">\r\n                <div class=\"mb-3\">\r\n                  <label for=\"NameProduct\" class=\"form-label\">Nombre de producto</label>\r\n                  <input v-model=\"props.idparactuproduc.nombre\" id=\"NameProduct\" type=\"text\" class=\"form-control\" >\r\n                </div>\r\n                <div class=\"mb-3\">\r\n                  <label for=\"categ\" class=\"form-label\">Cantidad de venta</label>\r\n                  <select v-model=\"cantVen\" id=\"categ\" class=\"form-select\" aria-label=\"Default select example\">\r\n                    <option v-for=\"cant in datoscant\" :key=\"cant.IDCantidad\">{{ cant.NombreCantidad }}</option>\r\n                  </select>\r\n                </div>\r\n                <div class=\"mb-3\">\r\n                  <label for=\"CostUni\" class=\"form-label\">Costo Unitario</label>\r\n                  <input v-model.number=\"props.idparactuproduc.presioprod\" id=\"CostUni\" type=\"number\" class=\"form-control\">\r\n                </div>\r\n                <div class=\"mb-3\">\r\n                  <label for=\"preci\" class=\"form-label\">Precio</label>\r\n                  <input v-model.number=\"props.idparactuproduc.Presiovent\" id=\"preci\" type=\"number\" class=\"form-control\">\r\n                </div>\r\n                \r\n              </div>\r\n              <div class=\"col-lg-6\">\r\n                <div class=\"mb-3\">\r\n                  <label for=\"cantidad\" class=\"form-label\">Cantidad</label>\r\n                  <input v-model.number=\"props.idparactuproduc.cantid\" type=\"number\" id=\"cantidad\" name=\"cantidad\" min=\"1\" max=\"100\" step=\"1\" class=\"form-control\">\r\n                </div>\r\n                <div class=\"mb-3\">\r\n                  <label for=\"categ\" class=\"form-label\">Categoría</label>\r\n                  <select v-model=\"category\" id=\"categ\" class=\"form-select\" aria-label=\"Default select example\">\r\n                    <option v-for=\"cat in datoscat\" :key=\"cat.IDCatProd\">{{ cat.NombreCategoria }}</option>\r\n                  </select>\r\n                </div>\r\n                <div class=\"form-check\">\r\n                  <input class=\"form-check-input\" v-model=\"Factura\" type=\"radio\" name=\"exampleRadios\" id=\"exampleRadios2\" value=\"Factura\">\r\n                  <label class=\"form-check-label\" for=\"exampleRadios2\">\r\n                    Factura\r\n                  </label>\r\n                </div>\r\n                <div class=\"mb-3\">\r\n                  <label for=\"Textarea1\" class=\"form-label\">Descripción</label>\r\n                  <textarea v-model=\"props.idparactuproduc.Desc\" class=\"form-control\" id=\"Textarea1\" rows=\"3\"></textarea>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"text-center mt-4\">\r\n              <button @click=\"actualiProduct\" class=\"btn btn-primary\">Actualizar producto</button>\r\n              <p class=\" d-none\">{{ idparactuproduc }}</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n    name:'ActProd',\r\n    data(props) {\r\n    return {\r\n        productNam:'',\r\n        cantVen:'',\r\n        Costunit:0,\r\n        pric:0,\r\n        canti:0,\r\n        Factura:'',\r\n        descriptio:'',\r\n\r\n        datoscant: [],\r\n        datoscat: [],\r\n\r\n        idNeg: 1,\r\n        idimg: 1,\r\n\r\n        selectfile: null,\r\n\r\n        props\r\n        };\r\n    },\r\n    mounted() {\r\n    this.Cantidades();\r\n    this.Categorias();\r\n    },\r\n    props:{\r\n      idparactuproduc:Object\r\n    },\r\n    methods:{\r\n        async Cantidades() {\r\n      try {\r\n        const response = await axios.get('http://localhost:3000/cantidadproducDos');\r\n        this.datoscant = response.data.results; \r\n      } catch (error) {\r\n        console.error('Error al obtener las cantidades:', error);\r\n        alert('Error al obtener las cantidades');\r\n      }\r\n    },\r\n\r\n    async Categorias() {\r\n      try {\r\n        const response = await axios.get('http://localhost:3000/categoriaproducto');\r\n        this.datoscat = response.data.results; \r\n      } catch (error) {\r\n        console.error('Error al obtener las categorias:', error);\r\n        alert('Error al obtener las categorias');\r\n      }\r\n    },\r\n    onFileChange(event) {\r\n      this.selectfile = event.target.files[0];\r\n    },\r\n\r\n    async actualiProduct() {\r\n        const formDatos = {\r\n\r\n            productNam: this.props.idparactuproduc.nombre,\r\n            Costunit: this.props.idparactuproduc.presioprod,\r\n            pric: this.props.idparactuproduc.Presiovent,\r\n            canti:  this.props.idparactuproduc.cantid,\r\n            Factura:  this.Factura,\r\n            descriptio: this.props.idparactuproduc.Desc,\r\n\r\n            idneg: this.idNeg,\r\n            idimg: this.idimg,\r\n\r\n            Datos: this.selectfile,\r\n\r\n            identificadorprod: this.props.idparactuproduc\r\n\r\n        };\r\n        try {\r\n            const response = await axios.put('http://localhost:3000/actualizarproducto/:id', formDatos);\r\n            console.log('Respuesta del servidor:', response.data); \r\n            alert('producto actualizado con éxito');\r\n            this.productNam = \"\",\r\n            this.Costunit = 0,\r\n            this.pric = 0,\r\n            this.canti = 0,\r\n            this.Factura = \"\",\r\n            this.descriptio = \"\",\r\n            this.selectfile = null\r\n\r\n        }catch (error) {\r\n            console.error('Error al actualizar el producto:', error);\r\n            alert('Error al actualizar el producto: ' + error.message);\r\n        }  \r\n    },\r\n    \r\n    \r\n    }\r\n\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n  \r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}